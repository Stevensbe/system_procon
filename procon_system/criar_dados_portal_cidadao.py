#!/usr/bin/env python
"""
Script para criar dados de teste para o portal do cidad√£o
"""
import os
import sys
import django
from datetime import datetime, timedelta

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'procon_system.settings')
django.setup()

from django.contrib.auth.models import User
from portal_cidadao.models import (
    CategoriaConteudo, ConteudoPortal, FormularioPublico, BannerPortal,
    ConsultaPublica, AvaliacaoServico, ConfiguracaoPortal, EstatisticaPortal
)

def criar_categorias():
    """Criar categorias de conte√∫do"""
    print("üìÇ Criando categorias de conte√∫do...")
    
    categorias = [
        {
            'nome': 'Direitos do Consumidor',
            'descricao': 'Informa√ß√µes sobre os direitos b√°sicos do consumidor',
            'icone': 'fas fa-shield-alt',
            'cor': '#007bff',
            'ordem': 1
        },
        {
            'nome': 'Como Proceder',
            'descricao': 'Orienta√ß√µes sobre como agir em diferentes situa√ß√µes',
            'icone': 'fas fa-info-circle',
            'cor': '#28a745',
            'ordem': 2
        },
        {
            'nome': 'Den√∫ncias e Reclama√ß√µes',
            'descricao': 'Como fazer den√∫ncias e reclama√ß√µes',
            'icone': 'fas fa-exclamation-triangle',
            'cor': '#dc3545',
            'ordem': 3
        },
        {
            'nome': 'Legisla√ß√£o',
            'descricao': 'Leis e regulamenta√ß√µes importantes',
            'icone': 'fas fa-gavel',
            'cor': '#6f42c1',
            'ordem': 4
        },
        {
            'nome': 'Dicas e Orienta√ß√µes',
            'descricao': 'Dicas pr√°ticas para o dia a dia',
            'icone': 'fas fa-lightbulb',
            'cor': '#ffc107',
            'ordem': 5
        }
    ]
    
    for cat_data in categorias:
        categoria, created = CategoriaConteudo.objects.get_or_create(
            nome=cat_data['nome'],
            defaults=cat_data
        )
        if created:
            print(f"   ‚úÖ Categoria '{categoria.nome}' criada")
        else:
            print(f"   ‚ÑπÔ∏è  Categoria '{categoria.nome}' j√° existe")
    
    return CategoriaConteudo.objects.all()

def criar_conteudos(categorias):
    """Criar conte√∫dos do portal"""
    print("\nüìù Criando conte√∫dos do portal...")
    
    # Obter usu√°rio admin ou criar um
    try:
        autor = User.objects.filter(is_staff=True).first()
        if not autor:
            autor = User.objects.create_user(
                username='admin_portal',
                email='admin@procon.am.gov.br',
                password='admin123456',
                first_name='Administrador',
                last_name='Portal',
                is_staff=True
            )
    except:
        autor = User.objects.first()
    
    conteudos = [
        {
            'categoria': categorias[0],  # Direitos do Consumidor
            'tipo': 'ORIENTACAO',
            'titulo': 'Seus Direitos como Consumidor',
            'subtitulo': 'Conhe√ßa os direitos b√°sicos garantidos pelo C√≥digo de Defesa do Consumidor',
            'resumo': 'Informa√ß√µes essenciais sobre os direitos do consumidor brasileiro.',
            'conteudo': '''
            <h3>Direitos B√°sicos do Consumidor</h3>
            <p>O C√≥digo de Defesa do Consumidor (CDC) garante uma s√©rie de direitos fundamentais:</p>
            <ul>
                <li><strong>Direito √† Informa√ß√£o:</strong> Produtos e servi√ßos devem ter informa√ß√µes claras e precisas</li>
                <li><strong>Direito √† Escolha:</strong> Liberdade de escolher entre produtos e servi√ßos dispon√≠veis</li>
                <li><strong>Direito √† Seguran√ßa:</strong> Prote√ß√£o contra produtos e servi√ßos perigosos</li>
                <li><strong>Direito √† Educa√ß√£o:</strong> Acesso a informa√ß√µes sobre consumo</li>
                <li><strong>Direito √† Prote√ß√£o:</strong> Defesa contra pr√°ticas abusivas</li>
            </ul>
            <h3>Como Exercer Seus Direitos</h3>
            <p>Para exercer seus direitos como consumidor:</p>
            <ol>
                <li>Documente sempre suas compras e contratos</li>
                <li>Guarde recibos, notas fiscais e contratos</li>
                <li>Fa√ßa reclama√ß√µes por escrito</li>
                <li>Procure o PROCON em caso de problemas</li>
            </ol>
            ''',
            'slug': 'direitos-consumidor',
            'palavras_chave': 'direitos, consumidor, CDC, prote√ß√£o',
            'meta_description': 'Conhe√ßa seus direitos como consumidor e como exerc√™-los',
            'destaque': True,
            'ativo': True
        },
        {
            'categoria': categorias[1],  # Como Proceder
            'tipo': 'TUTORIAL',
            'titulo': 'Como Fazer uma Reclama√ß√£o',
            'subtitulo': 'Passo a passo para fazer uma reclama√ß√£o eficaz',
            'resumo': 'Aprenda como fazer uma reclama√ß√£o de forma adequada e eficaz.',
            'conteudo': '''
            <h3>Passo a Passo para Fazer uma Reclama√ß√£o</h3>
            <h4>1. Documente o Problema</h4>
            <p>Colete todas as informa√ß√µes poss√≠veis:</p>
            <ul>
                <li>Nome da empresa ou estabelecimento</li>
                <li>Data e local da ocorr√™ncia</li>
                <li>Descri√ß√£o detalhada do problema</li>
                <li>Documentos comprobat√≥rios</li>
            </ul>
            <h4>2. Tente Resolver Diretamente</h4>
            <p>Antes de procurar o PROCON, tente resolver diretamente com a empresa:</p>
            <ul>
                <li>Entre em contato com o SAC</li>
                <li>Fa√ßa a reclama√ß√£o por escrito</li>
                <li>D√™ um prazo para resposta</li>
            </ul>
            <h4>3. Procure o PROCON</h4>
            <p>Se n√£o conseguir resolver, procure o PROCON:</p>
            <ul>
                <li>Leve todos os documentos</li>
                <li>Fa√ßa a reclama√ß√£o detalhada</li>
                <li>Aguarde o processo de media√ß√£o</li>
            </ul>
            ''',
            'slug': 'como-fazer-reclamacao',
            'palavras_chave': 'reclama√ß√£o, den√∫ncia, PROCON, direitos',
            'meta_description': 'Aprenda como fazer uma reclama√ß√£o de forma adequada',
            'destaque': True,
            'ativo': True
        },
        {
            'categoria': categorias[2],  # Den√∫ncias e Reclama√ß√µes
            'tipo': 'ORIENTACAO',
            'titulo': 'Quando Fazer uma Den√∫ncia',
            'subtitulo': 'Saiba quando √© necess√°rio fazer uma den√∫ncia ao PROCON',
            'resumo': 'Orienta√ß√µes sobre quando e como fazer den√∫ncias ao PROCON.',
            'conteudo': '''
            <h3>Quando Fazer uma Den√∫ncia</h3>
            <p>Voc√™ deve fazer uma den√∫ncia quando:</p>
            <ul>
                <li>A empresa n√£o cumpre o que foi prometido</li>
                <li>Produtos apresentam defeitos</li>
                <li>Servi√ßos n√£o s√£o prestados adequadamente</li>
                <li>H√° cobran√ßas indevidas</li>
                <li>Pr√°ticas abusivas s√£o identificadas</li>
            </ul>
            <h3>Diferen√ßa entre Reclama√ß√£o e Den√∫ncia</h3>
            <p><strong>Reclama√ß√£o:</strong> Problema individual com uma empresa</p>
            <p><strong>Den√∫ncia:</strong> Problema que afeta v√°rios consumidores</p>
            <h3>Como Fazer a Den√∫ncia</h3>
            <ol>
                <li>Colete evid√™ncias do problema</li>
                <li>Documente todas as tentativas de resolu√ß√£o</li>
                <li>Procure o PROCON com todos os documentos</li>
                <li>Fa√ßa a den√∫ncia detalhada</li>
            </ol>
            ''',
            'slug': 'quando-fazer-denuncia',
            'palavras_chave': 'den√∫ncia, PROCON, direitos, prote√ß√£o',
            'meta_description': 'Saiba quando fazer uma den√∫ncia ao PROCON',
            'destaque': False,
            'ativo': True
        }
    ]
    
    for cont_data in conteudos:
        conteudo, created = ConteudoPortal.objects.get_or_create(
            slug=cont_data['slug'],
            defaults={
                **cont_data,
                'autor': autor,
                'data_publicacao': datetime.now()
            }
        )
        if created:
            print(f"   ‚úÖ Conte√∫do '{conteudo.titulo}' criado")
        else:
            print(f"   ‚ÑπÔ∏è  Conte√∫do '{conteudo.titulo}' j√° existe")

def criar_formularios():
    """Criar formul√°rios p√∫blicos"""
    print("\nüìÑ Criando formul√°rios p√∫blicos...")
    
    formularios = [
        {
            'nome': 'Formul√°rio de Reclama√ß√£o',
            'descricao': 'Formul√°rio para fazer reclama√ß√µes sobre produtos ou servi√ßos',
            'categoria': 'RECLAMACAO',
            'versao': '2.0',
            'tamanho_bytes': 245760,  # 240KB
            'destaque': True,
            'ativo': True,
            'instrucoes': 'Preencha todos os campos obrigat√≥rios e anexe os documentos necess√°rios.'
        },
        {
            'nome': 'Formul√°rio de Den√∫ncia',
            'descricao': 'Formul√°rio para denunciar pr√°ticas abusivas ou irregulares',
            'categoria': 'DENUNCIA',
            'versao': '1.5',
            'tamanho_bytes': 184320,  # 180KB
            'destaque': True,
            'ativo': True,
            'instrucoes': 'Descreva detalhadamente a situa√ß√£o e forne√ßa evid√™ncias quando poss√≠vel.'
        },
        {
            'nome': 'Solicita√ß√£o de Orienta√ß√£o',
            'descricao': 'Formul√°rio para solicitar orienta√ß√µes sobre direitos do consumidor',
            'categoria': 'ORIENTACAO',
            'versao': '1.0',
            'tamanho_bytes': 122880,  # 120KB
            'destaque': False,
            'ativo': True,
            'instrucoes': 'Descreva sua d√∫vida de forma clara para receber a melhor orienta√ß√£o.'
        },
        {
            'nome': 'Cadastro de Consumidor',
            'descricao': 'Formul√°rio para cadastro no sistema do PROCON',
            'categoria': 'CADASTRO',
            'versao': '1.0',
            'tamanho_bytes': 102400,  # 100KB
            'destaque': False,
            'ativo': True,
            'instrucoes': 'Preencha seus dados pessoais para facilitar o atendimento.'
        }
    ]
    
    for form_data in formularios:
        formulario, created = FormularioPublico.objects.get_or_create(
            nome=form_data['nome'],
            defaults=form_data
        )
        if created:
            print(f"   ‚úÖ Formul√°rio '{formulario.nome}' criado")
        else:
            print(f"   ‚ÑπÔ∏è  Formul√°rio '{formulario.nome}' j√° existe")

def criar_banners():
    """Criar banners do portal"""
    print("\nüñºÔ∏è Criando banners do portal...")
    
    banners = [
        {
            'titulo': 'Proteja Seus Direitos',
            'subtitulo': 'O PROCON est√° aqui para defender voc√™',
            'texto': 'Conhe√ßa seus direitos como consumidor e saiba como exerc√™-los.',
            'link': '/orientacoes/',
            'link_texto': 'Saiba Mais',
            'ativo': True,
            'ordem': 1
        },
        {
            'titulo': 'Fa√ßa sua Reclama√ß√£o Online',
            'subtitulo': 'Processo r√°pido e seguro',
            'texto': 'N√£o precisa sair de casa para fazer sua reclama√ß√£o.',
            'link': '/peticionar/',
            'link_texto': 'Reclamar Agora',
            'ativo': True,
            'ordem': 2
        },
        {
            'titulo': 'Consulte seu Processo',
            'subtitulo': 'Acompanhe o andamento',
            'texto': 'Acompanhe o andamento do seu processo de forma online.',
            'link': '/consulta/',
            'link_texto': 'Consultar',
            'ativo': True,
            'ordem': 3
        }
    ]
    
    for banner_data in banners:
        banner, created = BannerPortal.objects.get_or_create(
            titulo=banner_data['titulo'],
            defaults=banner_data
        )
        if created:
            print(f"   ‚úÖ Banner '{banner.titulo}' criado")
        else:
            print(f"   ‚ÑπÔ∏è  Banner '{banner.titulo}' j√° existe")

def criar_configuracao_portal():
    """Criar configura√ß√£o do portal"""
    print("\n‚öôÔ∏è Criando configura√ß√£o do portal...")
    
    if not ConfiguracaoPortal.objects.exists():
        config = ConfiguracaoPortal.objects.create(
            nome_instituicao='PROCON - Amazonas',
            endereco='Rua da Justi√ßa, 123 - Centro\nManaus/AM - CEP: 69000-000',
            telefone='(92) 1234-5678',
            email='contato@procon.am.gov.br',
            site='https://www.procon.am.gov.br',
            horario_funcionamento='Segunda a Sexta: 8h √†s 18h\nS√°bado: 8h √†s 12h',
            facebook='https://facebook.com/proconamazonas',
            instagram='https://instagram.com/proconamazonas',
            twitter='https://twitter.com/proconamazonas',
            youtube='https://youtube.com/proconamazonas',
            sobre_instituicao='O PROCON do Amazonas √© uma institui√ß√£o p√∫blica dedicada a proteger os direitos do consumidor.',
            missao='Proteger e defender os direitos do consumidor, promovendo a cidadania e a justi√ßa social.',
            visao='Ser reconhecida como uma institui√ß√£o de excel√™ncia na defesa do consumidor.',
            valores='√âtica, Compromisso, Excel√™ncia e Inova√ß√£o',
            permitir_consulta_publica=True,
            exigir_captcha=True,
            permitir_avaliacao=True
        )
        print("   ‚úÖ Configura√ß√£o do portal criada")
    else:
        print("   ‚ÑπÔ∏è  Configura√ß√£o do portal j√° existe")

def criar_estatisticas():
    """Criar estat√≠sticas de exemplo"""
    print("\nüìä Criando estat√≠sticas de exemplo...")
    
    # Criar estat√≠sticas para os √∫ltimos 30 dias
    for i in range(30):
        data = datetime.now().date() - timedelta(days=i)
        
        estatistica, created = EstatisticaPortal.objects.get_or_create(
            data=data,
            defaults={
                'visitas_unicas': 150 + (i * 5),
                'pageviews': 450 + (i * 15),
                'consultas_realizadas': 25 + (i * 2),
                'formularios_baixados': 10 + (i * 1),
                'avaliacoes_recebidas': 5 + (i * 1),
                'tempo_medio_sessao': 180 + (i * 5)
            }
        )
        
        if created and i < 5:  # Mostrar apenas os primeiros 5
            print(f"   ‚úÖ Estat√≠stica para {data.strftime('%d/%m/%Y')} criada")

def main():
    """Fun√ß√£o principal"""
    print("üöÄ CRIANDO DADOS DE TESTE PARA O PORTAL DO CIDAD√ÉO")
    print("=" * 60)
    
    try:
        # Criar categorias
        categorias = criar_categorias()
        
        # Criar conte√∫dos
        criar_conteudos(categorias)
        
        # Criar formul√°rios
        criar_formularios()
        
        # Criar banners
        criar_banners()
        
        # Criar configura√ß√£o
        criar_configuracao_portal()
        
        # Criar estat√≠sticas
        criar_estatisticas()
        
        print("\n" + "=" * 60)
        print("‚úÖ DADOS DE TESTE CRIADOS COM SUCESSO!")
        print("\nüìã RESUMO:")
        print(f"   üìÇ Categorias: {CategoriaConteudo.objects.count()}")
        print(f"   üìù Conte√∫dos: {ConteudoPortal.objects.count()}")
        print(f"   üìÑ Formul√°rios: {FormularioPublico.objects.count()}")
        print(f"   üñºÔ∏è Banners: {BannerPortal.objects.count()}")
        print(f"   ‚öôÔ∏è Configura√ß√µes: {ConfiguracaoPortal.objects.count()}")
        print(f"   üìä Estat√≠sticas: {EstatisticaPortal.objects.count()}")
        
        print("\nüéâ Portal do Cidad√£o pronto para uso!")
        
    except Exception as e:
        print(f"\n‚ùå ERRO: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
