# Generated by Django 5.2.5 on 2025-08-31 12:58

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoCaixaEntrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_distribuir', models.BooleanField(default=True, verbose_name='Distribuição Automática')),
                ('notificar_novos', models.BooleanField(default=True, verbose_name='Notificar Novos Documentos')),
                ('alerta_prazos', models.BooleanField(default=True, verbose_name='Alerta de Prazos')),
                ('dias_alerta_prazo', models.PositiveIntegerField(default=3, verbose_name='Dias para Alerta de Prazo')),
                ('formato_protocolo', models.CharField(default='PROT-{ANO}-{SEQUENCIAL}', max_length=50, verbose_name='Formato do Protocolo')),
                ('sequencial_por_ano', models.BooleanField(default=True, verbose_name='Sequencial por Ano')),
                ('notificar_email', models.BooleanField(default=True, verbose_name='Notificar por E-mail')),
                ('notificar_sms', models.BooleanField(default=False, verbose_name='Notificar por SMS')),
                ('notificar_push', models.BooleanField(default=True, verbose_name='Notificar Push')),
                ('dias_retencao', models.PositiveIntegerField(default=3650, verbose_name='Dias de Retenção')),
                ('auto_arquivar', models.BooleanField(default=True, verbose_name='Arquivamento Automático')),
            ],
            options={
                'verbose_name': 'Configuração da Caixa de Entrada',
                'verbose_name_plural': 'Configurações da Caixa de Entrada',
            },
        ),
        migrations.CreateModel(
            name='CaixaEntrada',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_protocolo', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Número de Protocolo')),
                ('tipo_documento', models.CharField(choices=[('PETICAO', 'Petição'), ('RECURSO', 'Recurso'), ('DENUNCIA', 'Denúncia'), ('RECLAMACAO', 'Reclamação'), ('AUTO_INFRACAO', 'Auto de Infração'), ('MULTA', 'Multa'), ('PROTOCOLO', 'Protocolo'), ('DOCUMENTO_INTERNO', 'Documento Interno'), ('SOLICITACAO', 'Solicitação'), ('OUTROS', 'Outros')], max_length=20, verbose_name='Tipo de Documento')),
                ('assunto', models.CharField(max_length=200, verbose_name='Assunto')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('prioridade', models.CharField(choices=[('BAIXA', 'Baixa'), ('NORMAL', 'Normal'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='NORMAL', max_length=10, verbose_name='Prioridade')),
                ('status', models.CharField(choices=[('NAO_LIDO', 'Não Lido'), ('LIDO', 'Lido'), ('EM_ANALISE', 'Em Análise'), ('RESPONDIDO', 'Respondido'), ('ARQUIVADO', 'Arquivado'), ('ENCAMINHADO', 'Encaminhado')], default='NAO_LIDO', max_length=15, verbose_name='Status')),
                ('lido_em', models.DateTimeField(blank=True, null=True, verbose_name='Lido em')),
                ('remetente_nome', models.CharField(max_length=200, verbose_name='Nome do Remetente')),
                ('remetente_documento', models.CharField(blank=True, max_length=20, verbose_name='CPF/CNPJ')),
                ('remetente_email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('remetente_telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('empresa_nome', models.CharField(blank=True, max_length=200, verbose_name='Nome da Empresa')),
                ('empresa_cnpj', models.CharField(blank=True, max_length=18, verbose_name='CNPJ da Empresa')),
                ('setor_destino', models.CharField(max_length=100, verbose_name='Setor Destino')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('origem', models.CharField(default='PORTAL_CIDADAO', max_length=50, verbose_name='Origem')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('prazo_resposta', models.DateTimeField(blank=True, null=True, verbose_name='Prazo para Resposta')),
                ('data_entrada', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('versao', models.PositiveIntegerField(default=1, verbose_name='Versão')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('documento_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='versoes_posteriores', to='caixa_entrada.caixaentrada')),
                ('lido_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos_lidos', to=settings.AUTH_USER_MODEL)),
                ('responsavel_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Documento na Caixa de Entrada',
                'verbose_name_plural': 'Documentos na Caixa de Entrada',
                'ordering': ['-data_entrada'],
            },
        ),
        migrations.CreateModel(
            name='AnexoCaixaEntrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='caixa_entrada/anexos/%Y/%m/%d/', verbose_name='Arquivo')),
                ('nome_original', models.CharField(max_length=255, verbose_name='Nome Original')),
                ('tipo_mime', models.CharField(max_length=100, verbose_name='Tipo MIME')),
                ('tamanho', models.PositiveIntegerField(verbose_name='Tamanho (bytes)')),
                ('descricao', models.CharField(blank=True, max_length=200, verbose_name='Descrição')),
                ('upload_em', models.DateTimeField(auto_now_add=True, verbose_name='Upload em')),
                ('upload_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='caixa_entrada.caixaentrada')),
            ],
            options={
                'verbose_name': 'Anexo da Caixa de Entrada',
                'verbose_name_plural': 'Anexos da Caixa de Entrada',
                'ordering': ['-upload_em'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoCaixaEntrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(choices=[('CRIADO', 'Documento Criado'), ('LIDO', 'Documento Lido'), ('ENCAMINHADO', 'Documento Encaminhado'), ('RESPONDIDO', 'Documento Respondido'), ('ARQUIVADO', 'Documento Arquivado'), ('STATUS_ALTERADO', 'Status Alterado'), ('PRIORIDADE_ALTERADA', 'Prioridade Alterada'), ('RESPONSAVEL_ALTERADO', 'Responsável Alterado')], max_length=20, verbose_name='Ação')),
                ('detalhes', models.TextField(blank=True, verbose_name='Detalhes')),
                ('dados_anteriores', models.JSONField(blank=True, default=dict, verbose_name='Dados Anteriores')),
                ('dados_novos', models.JSONField(blank=True, default=dict, verbose_name='Dados Novos')),
                ('data_acao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Ação')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='caixa_entrada.caixaentrada')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico da Caixa de Entrada',
                'verbose_name_plural': 'Histórico da Caixa de Entrada',
                'ordering': ['-data_acao'],
            },
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['status'], name='caixa_entra_status_a54b39_idx'),
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['tipo_documento'], name='caixa_entra_tipo_do_1eebcf_idx'),
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['setor_destino'], name='caixa_entra_setor_d_c66b01_idx'),
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['prioridade'], name='caixa_entra_priorid_d06247_idx'),
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['data_entrada'], name='caixa_entra_data_en_9eefe4_idx'),
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['prazo_resposta'], name='caixa_entra_prazo_r_6458c2_idx'),
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['remetente_documento'], name='caixa_entra_remeten_5f2d6c_idx'),
        ),
        migrations.AddIndex(
            model_name='caixaentrada',
            index=models.Index(fields=['empresa_cnpj'], name='caixa_entra_empresa_fba04d_idx'),
        ),
    ]
