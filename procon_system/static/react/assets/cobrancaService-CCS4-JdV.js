class t{constructor(){this.baseURL="/api/cobranca",this.token=localStorage.getItem("access_token")}getHeaders(){const o={"Content-Type":"application/json",Accept:"application/json"};return this.token&&(o.Authorization=`Bearer ${this.token}`),o}async makeRequest(o,e={}){const r={headers:this.getHeaders(),...e};try{const a=await fetch(o,r);return a.status===401?(await this.refreshToken(),r.headers=this.getHeaders(),await fetch(o,r)):a}catch(a){throw console.error("Erro na requisição:",a),a}}async refreshToken(){try{const o=localStorage.getItem("refresh_token");if(!o)throw new Error("Refresh token não encontrado");const e=await fetch("/auth/token/refresh/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refresh:o})});if(e.ok){const r=await e.json();this.token=r.access,localStorage.setItem("access_token",r.access)}else localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),window.location.href="/login"}catch(o){console.error("Erro ao renovar token:",o),localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),window.location.href="/login"}}async getEstatisticas(){try{const o=await this.makeRequest(`${this.baseURL}/geral/estatisticas/`);if(!o.ok)throw new Error("Erro ao carregar estatisticas");return await o.json()}catch(o){return console.error("Erro ao carregar estatisticas:",o),this.getMockEstatisticas()}}async getBoletosRecentes(){try{const o=await fetch(`${this.baseURL}/boletos/boletos-recentes/`);if(!o.ok)throw new Error("Erro ao carregar boletos recentes");return await o.json()}catch(o){return console.error("Erro ao carregar boletos recentes:",o),this.getMockBoletosRecentes()}}async getPagamentosRecentes(){try{const o=await fetch(`${this.baseURL}/pagamentos/pagamentos-recentes/`);if(!o.ok)throw new Error("Erro ao carregar pagamentos recentes");return await o.json()}catch(o){return console.error("Erro ao carregar pagamentos recentes:",o),this.getMockPagamentosRecentes()}}async getRemessasRecentes(){try{const o=await fetch(`${this.baseURL}/cobrancas/cobrancas-recentes/`);if(!o.ok)throw new Error("Erro ao carregar cobranças recentes");return await o.json()}catch(o){return console.error("Erro ao carregar cobranças recentes:",o),this.getMockRemessasRecentes()}}async getBoletosVencidos(){try{const o=await fetch(`${this.baseURL}/boletos/boletos-vencidos/`);if(!o.ok)throw new Error("Erro ao carregar boletos vencidos");return await o.json()}catch(o){return console.error("Erro ao carregar boletos vencidos:",o),this.getMockBoletosVencidos()}}async getBoletosPorStatus(){try{const o=await fetch(`${this.baseURL}/boletos/boletos-por-status/`);if(!o.ok)throw new Error("Erro ao carregar boletos por status");return await o.json()}catch(o){return console.error("Erro ao carregar boletos por status:",o),this.getMockBoletosPorStatus()}}async getPagamentosPorMes(){try{const o=await fetch(`${this.baseURL}/pagamentos/pagamentos-por-mes/`);if(!o.ok)throw new Error("Erro ao carregar pagamentos por mes");return await o.json()}catch(o){return console.error("Erro ao carregar pagamentos por mes:",o),this.getMockPagamentosPorMes()}}async getRemessasPorStatus(){try{const o=await fetch(`${this.baseURL}/cobrancas/cobrancas-por-status/`);if(!o.ok)throw new Error("Erro ao carregar cobranças por status");return await o.json()}catch(o){return console.error("Erro ao carregar cobranças por status:",o),this.getMockRemessasPorStatus()}}async getBoletos(o={}){try{const e=new URLSearchParams;o.page&&e.append("page",o.page),o.search&&e.append("search",o.search),o.filters&&Object.keys(o.filters).forEach(a=>{o.filters[a]&&e.append(a,o.filters[a])}),o.sorting&&(e.append("sort_by",o.sorting.field),e.append("sort_direction",o.sorting.direction));const r=await fetch(`${this.baseURL}/boletos/?${e}`);if(!r.ok)throw new Error("Erro ao carregar boletos");return await r.json()}catch(e){return console.error("Erro ao carregar boletos:",e),this.getMockBoletos(o)}}async getBoleto(o){try{const e=await fetch(`${this.baseURL}/boletos/${o}/`);if(!e.ok)throw new Error("Erro ao carregar boleto");return await e.json()}catch(e){return console.error("Erro ao carregar boleto:",e),this.getMockBoleto(o)}}async createBoleto(o){try{const e=await fetch(`${this.baseURL}/boletos/`,{method:"POST",body:o});if(!e.ok)throw new Error("Erro ao criar boleto");return await e.json()}catch(e){throw console.error("Erro ao criar boleto:",e),e}}async updateBoleto(o,e){try{const r=await fetch(`${this.baseURL}/boletos/${o}/`,{method:"PUT",body:e});if(!r.ok)throw new Error("Erro ao atualizar boleto");return await r.json()}catch(r){throw console.error("Erro ao atualizar boleto:",r),r}}async deleteBoleto(o){try{if(!(await fetch(`${this.baseURL}/boletos/${o}/`,{method:"DELETE"})).ok)throw new Error("Erro ao excluir boleto");return!0}catch(e){throw console.error("Erro ao excluir boleto:",e),e}}async updateBoletoStatus(o,e){try{const r=await fetch(`${this.baseURL}/boletos/${o}/status/`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({status:e})});if(!r.ok)throw new Error("Erro ao atualizar status");return await r.json()}catch(r){throw console.error("Erro ao atualizar status:",r),r}}async getPagamentos(o={}){try{const e=new URLSearchParams;o.page&&e.append("page",o.page),o.search&&e.append("search",o.search),o.filters&&Object.keys(o.filters).forEach(a=>{o.filters[a]&&e.append(a,o.filters[a])});const r=await fetch(`${this.baseURL}/pagamentos/?${e}`);if(!r.ok)throw new Error("Erro ao carregar pagamentos");return await r.json()}catch(e){return console.error("Erro ao carregar pagamentos:",e),this.getMockPagamentos(o)}}async getPagamento(o){try{const e=await fetch(`${this.baseURL}/pagamentos/${o}/`);if(!e.ok)throw new Error("Erro ao carregar pagamento");return await e.json()}catch(e){return console.error("Erro ao carregar pagamento:",e),this.getMockPagamento(o)}}async processarPagamento(o){try{const e=await fetch(`${this.baseURL}/pagamentos/processar/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!e.ok)throw new Error("Erro ao processar pagamento");return await e.json()}catch(e){throw console.error("Erro ao processar pagamento:",e),e}}async getRemessas(o={}){try{const e=new URLSearchParams;o.page&&e.append("page",o.page),o.search&&e.append("search",o.search),o.filters&&Object.keys(o.filters).forEach(a=>{o.filters[a]&&e.append(a,o.filters[a])});const r=await fetch(`${this.baseURL}/cobrancas/?${e}`);if(!r.ok)throw new Error("Erro ao carregar cobranças");return await r.json()}catch(e){return console.error("Erro ao carregar cobranças:",e),this.getMockRemessas(o)}}async getRemessa(o){try{const e=await fetch(`${this.baseURL}/cobrancas/${o}/`);if(!e.ok)throw new Error("Erro ao carregar cobrança");return await e.json()}catch(e){return console.error("Erro ao carregar cobrança:",e),this.getMockRemessa(o)}}async gerarRemessa(o){try{const e=await fetch(`${this.baseURL}/cobrancas/gerar/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({boletos:o})});if(!e.ok)throw new Error("Erro ao gerar cobrança");return await e.json()}catch(e){throw console.error("Erro ao gerar cobrança:",e),e}}async processarRetorno(o){try{const e=new FormData;e.append("arquivo",o);const r=await fetch(`${this.baseURL}/cobrancas/retorno/`,{method:"POST",body:e});if(!r.ok)throw new Error("Erro ao processar retorno");return await r.json()}catch(e){throw console.error("Erro ao processar retorno:",e),e}}async getTiposBoleto(){try{const o=await fetch(`${this.baseURL}/configuracoes/`);if(!o.ok)throw new Error("Erro ao carregar configurações");return await o.json()}catch(o){return console.error("Erro ao carregar configurações:",o),this.getMockTiposBoleto()}}async getBancos(){try{const o=await fetch(`${this.baseURL}/templates/`);if(!o.ok)throw new Error("Erro ao carregar templates");return await o.json()}catch(o){return console.error("Erro ao carregar templates:",o),this.getMockBancos()}}async getProcessos(){try{const o=await fetch(`${this.baseURL}/geral/processos/`);if(!o.ok)throw new Error("Erro ao carregar processos");return await o.json()}catch(o){return console.error("Erro ao carregar processos:",o),this.getMockProcessos()}}async gerarRelatorio(o){try{const e=await fetch(`${this.baseURL}/relatorios/gerar/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!e.ok)throw new Error("Erro ao gerar relatorio");return await e.json()}catch(e){throw console.error("Erro ao gerar relatorio:",e),e}}async exportarBoletos(o){try{const e=new URLSearchParams;o.filters&&Object.keys(o.filters).forEach(a=>{o.filters[a]&&e.append(a,o.filters[a])});const r=await fetch(`${this.baseURL}/boletos/exportar/?${e}`);if(!r.ok)throw new Error("Erro ao exportar boletos");return await r.blob()}catch(e){throw console.error("Erro ao exportar boletos:",e),e}}getMockEstatisticas(){return{totalEmAberto:125000.5,recebidoHoje:15e3,boletosVencidos:45,taxaPagamento:78.5,variacaoEmAberto:5.2,variacaoRecebido:-2.1,variacaoVencidos:3,variacaoTaxa:1.5}}getMockBoletosRecentes(){return[{id:1,numero:"BOL001/2024",devedor:"Empresa ABC Ltda",valor:2500,status:"pendente",vencimento:"2024-02-15"},{id:2,numero:"BOL002/2024",devedor:"Joao Silva",valor:1500,status:"pago",vencimento:"2024-02-10"},{id:3,numero:"BOL003/2024",devedor:"Maria Santos",valor:3200,status:"vencido",vencimento:"2024-02-05"}]}getMockPagamentosRecentes(){return[{id:1,numeroBoleto:"BOL002/2024",formaPagamento:"PIX",valor:1500,dataPagamento:"2024-02-10"},{id:2,numeroBoleto:"BOL004/2024",formaPagamento:"Cartao",valor:2800,dataPagamento:"2024-02-09"}]}getMockRemessasRecentes(){return[{id:1,numero:"REM001/2024",banco:"Banco do Brasil",quantidadeBoletos:25,status:"processado"},{id:2,numero:"REM002/2024",banco:"Caixa Economica",quantidadeBoletos:18,status:"pendente"}]}getMockBoletosVencidos(){return[{id:3,numero:"BOL003/2024",devedor:"Maria Santos",documento:"123.456.789-00",valor:3200,vencimento:"2024-02-05",diasVencido:5,tipo:"multa"},{id:4,numero:"BOL005/2024",devedor:"Empresa XYZ",documento:"12.345.678/0001-90",valor:4500,vencimento:"2024-02-03",diasVencido:7,tipo:"taxa"}]}getMockBoletosPorStatus(){return[{status:"pendente",quantidade:150,percentual:45},{status:"pago",quantidade:120,percentual:36},{status:"vencido",quantidade:45,percentual:13},{status:"cancelado",quantidade:20,percentual:6}]}getMockPagamentosPorMes(){return[{mes:"Janeiro",valor:45e3,quantidade:45},{mes:"Fevereiro",valor:52e3,quantidade:52},{mes:"Marco",valor:38e3,quantidade:38}]}getMockRemessasPorStatus(){return[{status:"processado",quantidade:8,percentual:67},{status:"pendente",quantidade:3,percentual:25},{status:"erro",quantidade:1,percentual:8}]}getMockBoletos(o={}){const e=[{id:1,numero:"BOL001/2024",devedor:"Empresa ABC Ltda",documento:"12.345.678/0001-90",valor:2500,valorOriginal:2500,vencimento:"2024-02-15",status:"pendente",tipo:"multa",banco:"Banco do Brasil",diasVencido:0},{id:2,numero:"BOL002/2024",devedor:"Joao Silva",documento:"123.456.789-00",valor:1500,valorOriginal:1500,vencimento:"2024-02-10",status:"pago",tipo:"taxa",banco:"Caixa Economica",diasVencido:0},{id:3,numero:"BOL003/2024",devedor:"Maria Santos",documento:"987.654.321-00",valor:3200,valorOriginal:3200,vencimento:"2024-02-05",status:"vencido",tipo:"multa",banco:"Itau",diasVencido:5}];return{data:e,totalPages:1,totalItems:e.length}}getMockBoleto(o){return{id:parseInt(o),numero:`BOL${o.toString().padStart(3,"0")}/2024`,tipo:"multa",status:"pendente",valor:2500,valorOriginal:2500,vencimento:"2024-02-15",emissao:"2024-01-15",devedor:"Empresa ABC Ltda",documento:"12.345.678/0001-90",tipoDocumento:"cnpj",endereco:"Rua das Flores, 123",cidade:"Manaus",estado:"AM",cep:"69000-000",telefone:"(92) 99999-9999",email:"contato@empresaabc.com.br",banco:"001",agencia:"1234",conta:"12345-6",carteira:"17",nossoNumero:"12345678901",codigoBarras:"00193373700000001000500940144816060680935031",linhaDigitavel:"00190.00009 04448.160606 06809.350314 3 37370000000100",descricao:"Multa por infracao administrativa",observacoes:"Processo administrativo 001/2024",processo:"1",autoInfracao:"AI001/2024",multaAtraso:"2.00",jurosMora:"1.00",desconto:"0.00",descontoAte:"",documentos:[]}}getMockPagamentos(o={}){const e=[{id:1,numeroBoleto:"BOL002/2024",formaPagamento:"PIX",valor:1500,dataPagamento:"2024-02-10",status:"confirmado"},{id:2,numeroBoleto:"BOL004/2024",formaPagamento:"Cartao",valor:2800,dataPagamento:"2024-02-09",status:"confirmado"}];return{data:e,totalPages:1,totalItems:e.length}}getMockPagamento(o){return{id:parseInt(o),numeroBoleto:`BOL${o.toString().padStart(3,"0")}/2024`,formaPagamento:"PIX",valor:1500,dataPagamento:"2024-02-10",status:"confirmado",comprovante:"comprovante.pdf"}}getMockRemessas(o={}){const e=[{id:1,numero:"REM001/2024",banco:"Banco do Brasil",quantidadeBoletos:25,status:"processado",dataGeracao:"2024-02-10"},{id:2,numero:"REM002/2024",banco:"Caixa Economica",quantidadeBoletos:18,status:"pendente",dataGeracao:"2024-02-09"}];return{data:e,totalPages:1,totalItems:e.length}}getMockRemessa(o){return{id:parseInt(o),numero:`REM${o.toString().padStart(3,"0")}/2024`,banco:"Banco do Brasil",quantidadeBoletos:25,status:"processado",dataGeracao:"2024-02-10",arquivo:"remessa.txt"}}getMockTiposBoleto(){return[{id:"multa",nome:"Multa"},{id:"taxa",nome:"Taxa"},{id:"juros",nome:"Juros"},{id:"correcao",nome:"Correcao"}]}getMockBancos(){return[{codigo:"001",nome:"Banco do Brasil"},{codigo:"104",nome:"Caixa Economica Federal"},{codigo:"033",nome:"Santander"},{codigo:"341",nome:"Itau Unibanco"},{codigo:"237",nome:"Bradesco"},{codigo:"756",nome:"Sicoob"},{codigo:"748",nome:"Sicredi"}]}getMockProcessos(){return[{id:1,numero:"001/2024",empresa:"Empresa ABC Ltda"},{id:2,numero:"002/2024",empresa:"Empresa XYZ"},{id:3,numero:"003/2024",empresa:"Joao Silva"}]}}const n=new t;export{n as c};
