# Generated by Django 5.2.5 on 2025-08-17 19:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Fabricante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome/Razão Social')),
                ('cnpj', models.CharField(blank=True, max_length=18, unique=True, verbose_name='CNPJ')),
                ('endereco', models.TextField(blank=True, verbose_name='Endereço')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('site', models.URLField(blank=True, verbose_name='Site')),
                ('pais_origem', models.CharField(default='Brasil', max_length=100, verbose_name='País de Origem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Fabricante',
                'verbose_name_plural': 'Fabricantes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('requer_inspecao', models.BooleanField(default=False, verbose_name='Requer Inspeção')),
                ('permite_inutilizacao', models.BooleanField(default=False, verbose_name='Permite Inutilização')),
                ('prazo_validade_obrigatorio', models.BooleanField(default=False, verbose_name='Prazo de Validade Obrigatório')),
                ('categoria_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='produtos.categoriaproduto', verbose_name='Categoria Pai')),
            ],
            options={
                'verbose_name': 'Categoria de Produto',
                'verbose_name_plural': 'Categorias de Produto',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do Produto')),
                ('codigo_interno', models.CharField(max_length=50, unique=True, verbose_name='Código Interno')),
                ('codigo_barras', models.CharField(blank=True, max_length=20, verbose_name='Código de Barras')),
                ('codigo_ncm', models.CharField(blank=True, max_length=10, verbose_name='Código NCM')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('especificacoes', models.TextField(blank=True, verbose_name='Especificações Técnicas')),
                ('unidade_medida', models.CharField(choices=[('un', 'Unidade'), ('kg', 'Quilograma'), ('g', 'Grama'), ('l', 'Litro'), ('ml', 'Mililitro'), ('m', 'Metro'), ('cm', 'Centímetro'), ('m2', 'Metro Quadrado'), ('m3', 'Metro Cúbico'), ('cx', 'Caixa'), ('pct', 'Pacote'), ('dz', 'Dúzia'), ('par', 'Par')], default='un', max_length=10, verbose_name='Unidade de Medida')),
                ('peso_liquido', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Peso Líquido')),
                ('peso_bruto', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Peso Bruto')),
                ('dimensoes', models.CharField(blank=True, help_text='Ex: 10x20x30 cm', max_length=100, verbose_name='Dimensões')),
                ('preco_referencia', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço de Referência')),
                ('preco_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço Mínimo')),
                ('preco_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço Máximo')),
                ('data_atualizacao_preco', models.DateField(blank=True, null=True, verbose_name='Data Atualização Preço')),
                ('tem_validade', models.BooleanField(default=False, verbose_name='Tem Validade')),
                ('prazo_validade_dias', models.IntegerField(blank=True, null=True, verbose_name='Prazo de Validade (dias)')),
                ('condicoes_armazenamento', models.TextField(blank=True, verbose_name='Condições de Armazenamento')),
                ('temperatura_conservacao', models.CharField(blank=True, max_length=50, verbose_name='Temperatura de Conservação')),
                ('classificacao_risco', models.CharField(choices=[('baixo', 'Baixo Risco'), ('medio', 'Médio Risco'), ('alto', 'Alto Risco'), ('critico', 'Crítico')], default='baixo', max_length=10, verbose_name='Classificação de Risco')),
                ('requer_licenca', models.BooleanField(default=False, verbose_name='Requer Licença')),
                ('controlado_anvisa', models.BooleanField(default=False, verbose_name='Controlado ANVISA')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('descontinuado', models.BooleanField(default=False, verbose_name='Descontinuado')),
                ('data_descontinuacao', models.DateField(blank=True, null=True, verbose_name='Data de Descontinuação')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('criado_por', models.CharField(max_length=100, verbose_name='Criado por')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='produtos.categoriaproduto', verbose_name='Categoria')),
                ('fabricante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='produtos.fabricante', verbose_name='Fabricante')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ControleEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estabelecimento_cnpj', models.CharField(max_length=18, verbose_name='CNPJ do Estabelecimento')),
                ('estabelecimento_nome', models.CharField(max_length=255, verbose_name='Nome do Estabelecimento')),
                ('quantidade_estoque', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Quantidade em Estoque')),
                ('quantidade_minima', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Quantidade Mínima')),
                ('quantidade_maxima', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Quantidade Máxima')),
                ('setor_armazenamento', models.CharField(blank=True, max_length=100, verbose_name='Setor de Armazenamento')),
                ('condicoes_armazenamento', models.TextField(blank=True, verbose_name='Condições de Armazenamento')),
                ('produtos_proximos_vencimento', models.IntegerField(default=0, verbose_name='Produtos Próximos ao Vencimento')),
                ('produtos_vencidos', models.IntegerField(default=0, verbose_name='Produtos Vencidos')),
                ('data_verificacao', models.DateField(verbose_name='Data da Verificação')),
                ('verificado_por', models.CharField(max_length=100, verbose_name='Verificado por')),
                ('fiscalizacao_relacionada', models.CharField(blank=True, max_length=50, verbose_name='Fiscalização')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('irregularidades', models.TextField(blank=True, verbose_name='Irregularidades Encontradas')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='produtos.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Controle de Estoque',
                'verbose_name_plural': 'Controle de Estoque',
                'ordering': ['-data_verificacao'],
            },
        ),
        migrations.CreateModel(
            name='ProdutoInutilizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_auto', models.CharField(max_length=50, verbose_name='Número do Auto')),
                ('estabelecimento_nome', models.CharField(max_length=255, verbose_name='Nome do Estabelecimento')),
                ('estabelecimento_cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('estabelecimento_endereco', models.TextField(verbose_name='Endereço')),
                ('motivo', models.CharField(choices=[('vencido', 'Produto Vencido'), ('deteriorado', 'Produto Deteriorado'), ('sem_rotulo', 'Sem Rótulo/Identificação'), ('rotulo_irregular', 'Rótulo Irregular'), ('sem_registro', 'Sem Registro Sanitário'), ('falsificado', 'Produto Falsificado'), ('adulterado', 'Produto Adulterado'), ('condicoes_inadequadas', 'Condições Inadequadas de Armazenamento'), ('outros', 'Outros')], max_length=30, verbose_name='Motivo da Inutilização')),
                ('descricao_motivo', models.TextField(verbose_name='Descrição Detalhada do Motivo')),
                ('quantidade_inutilizada', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Quantidade Inutilizada')),
                ('unidade', models.CharField(max_length=20, verbose_name='Unidade')),
                ('valor_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Estimado')),
                ('lote', models.CharField(blank=True, max_length=50, verbose_name='Lote')),
                ('data_validade', models.DateField(blank=True, null=True, verbose_name='Data de Validade')),
                ('data_fabricacao', models.DateField(blank=True, null=True, verbose_name='Data de Fabricação')),
                ('codigo_barras_produto', models.CharField(blank=True, max_length=20, verbose_name='Código de Barras')),
                ('data_inutilizacao', models.DateField(verbose_name='Data da Inutilização')),
                ('hora_inutilizacao', models.TimeField(verbose_name='Hora da Inutilização')),
                ('forma_inutilizacao', models.TextField(help_text='Como foi inutilizado', verbose_name='Forma de Inutilização')),
                ('destino_produto', models.CharField(choices=[('incineracao', 'Incineração'), ('aterro', 'Aterro Sanitário'), ('reciclagem', 'Reciclagem'), ('devolucao_fabricante', 'Devolução ao Fabricante'), ('doacao', 'Doação (se adequado)'), ('outros', 'Outros')], max_length=30, verbose_name='Destino do Produto')),
                ('destino_observacoes', models.TextField(blank=True, verbose_name='Observações sobre Destino')),
                ('fiscal_responsavel', models.CharField(max_length=255, verbose_name='Fiscal Responsável')),
                ('responsavel_estabelecimento', models.CharField(max_length=255, verbose_name='Responsável do Estabelecimento')),
                ('testemunhas', models.TextField(blank=True, help_text='Uma por linha', verbose_name='Testemunhas')),
                ('auto_inutilizacao_gerado', models.BooleanField(default=False, verbose_name='Auto de Inutilização Gerado')),
                ('fotos_anexadas', models.BooleanField(default=False, verbose_name='Fotos Anexadas')),
                ('termo_assinado', models.BooleanField(default=False, verbose_name='Termo Assinado')),
                ('destino_confirmado', models.BooleanField(default=False, verbose_name='Destino Confirmado')),
                ('data_confirmacao_destino', models.DateField(blank=True, null=True, verbose_name='Data Confirmação Destino')),
                ('comprovante_destino', models.FileField(blank=True, null=True, upload_to='comprovantes_destino/', verbose_name='Comprovante de Destino')),
                ('observacoes_gerais', models.TextField(blank=True, verbose_name='Observações Gerais')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('criado_por', models.CharField(max_length=100, verbose_name='Criado por')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='produtos.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Produto Inutilizado',
                'verbose_name_plural': 'Produtos Inutilizados',
                'ordering': ['-data_inutilizacao'],
            },
        ),
        migrations.CreateModel(
            name='FotoProdutoInutilizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(upload_to='produtos_inutilizados/%Y/%m/%d/', verbose_name='Foto')),
                ('descricao', models.CharField(blank=True, max_length=255, verbose_name='Descrição')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('produto_inutilizado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotos', to='produtos.produtoinutilizado')),
            ],
            options={
                'verbose_name': 'Foto de Produto Inutilizado',
                'verbose_name_plural': 'Fotos de Produtos Inutilizados',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='RegistroPreco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estabelecimento', models.CharField(max_length=255, verbose_name='Estabelecimento')),
                ('cnpj_estabelecimento', models.CharField(blank=True, max_length=18, verbose_name='CNPJ')),
                ('endereco_estabelecimento', models.TextField(blank=True, verbose_name='Endereço')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço')),
                ('preco_promocional', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço Promocional')),
                ('unidade_venda', models.CharField(default='un', max_length=20, verbose_name='Unidade de Venda')),
                ('data_coleta', models.DateField(verbose_name='Data da Coleta')),
                ('hora_coleta', models.TimeField(blank=True, null=True, verbose_name='Hora da Coleta')),
                ('data_validade', models.DateField(blank=True, null=True, verbose_name='Data de Validade')),
                ('coletado_por', models.CharField(max_length=100, verbose_name='Coletado por')),
                ('fiscalizacao_relacionada', models.CharField(blank=True, max_length=50, verbose_name='Número Fiscalização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('verificado', models.BooleanField(default=False, verbose_name='Verificado')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_preco', to='produtos.produto')),
            ],
            options={
                'verbose_name': 'Registro de Preço',
                'verbose_name_plural': 'Registros de Preços',
                'ordering': ['-data_coleta'],
            },
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['codigo_barras'], name='produtos_pr_codigo__f87624_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['codigo_ncm'], name='produtos_pr_codigo__365333_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['categoria'], name='produtos_pr_categor_b0e6ca_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['nome'], name='produtos_pr_nome_664e48_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='controleestoque',
            unique_together={('estabelecimento_cnpj', 'produto', 'data_verificacao')},
        ),
        migrations.AddIndex(
            model_name='produtoinutilizado',
            index=models.Index(fields=['numero_auto'], name='produtos_pr_numero__1da056_idx'),
        ),
        migrations.AddIndex(
            model_name='produtoinutilizado',
            index=models.Index(fields=['estabelecimento_cnpj'], name='produtos_pr_estabel_1e8a92_idx'),
        ),
        migrations.AddIndex(
            model_name='produtoinutilizado',
            index=models.Index(fields=['data_inutilizacao'], name='produtos_pr_data_in_b437b6_idx'),
        ),
        migrations.AddIndex(
            model_name='registropreco',
            index=models.Index(fields=['produto', 'data_coleta'], name='produtos_re_produto_13df51_idx'),
        ),
        migrations.AddIndex(
            model_name='registropreco',
            index=models.Index(fields=['cnpj_estabelecimento'], name='produtos_re_cnpj_es_07f645_idx'),
        ),
    ]
