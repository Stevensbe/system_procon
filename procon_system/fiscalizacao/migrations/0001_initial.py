# Generated by Django 4.2.11 on 2025-09-21 04:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnexoAuto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('arquivo', models.FileField(upload_to='anexos/%Y/%m/%d/', verbose_name='Arquivo Anexo')),
                ('descricao', models.CharField(blank=True, max_length=255, verbose_name='Descrição')),
                ('enviado_em', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Anexo do Auto',
                'verbose_name_plural': 'Anexos dos Autos',
            },
        ),
        migrations.CreateModel(
            name='AssinaturaDigital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_assinatura', models.CharField(choices=[('fiscal_1', 'Fiscal 1'), ('fiscal_2', 'Fiscal 2'), ('responsavel', 'Responsável'), ('testemunha', 'Testemunha')], max_length=20, verbose_name='Tipo de Assinatura')),
                ('nome_assinante', models.CharField(max_length=255, verbose_name='Nome do Assinante')),
                ('cpf_assinante', models.CharField(max_length=14, verbose_name='CPF do Assinante')),
                ('email_assinante', models.EmailField(blank=True, max_length=254, verbose_name='Email do Assinante')),
                ('hash_assinatura', models.CharField(blank=True, max_length=255, verbose_name='Hash da Assinatura')),
                ('certificado_digital', models.TextField(blank=True, verbose_name='Certificado Digital')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('assinado', 'Assinado'), ('rejeitado', 'Rejeitado'), ('expirado', 'Expirado')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_assinatura', models.DateTimeField(blank=True, null=True, verbose_name='Data da Assinatura')),
                ('data_expiracao', models.DateTimeField(verbose_name='Data de Expiração')),
                ('ip_assinatura', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP da Assinatura')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('assinatura_manual', models.ImageField(blank=True, null=True, upload_to='assinaturas_manuais/', verbose_name='Assinatura Manual')),
            ],
            options={
                'verbose_name': 'Assinatura Digital',
                'verbose_name_plural': 'Assinaturas Digitais',
                'ordering': ['-data_assinatura'],
            },
        ),
        migrations.CreateModel(
            name='AtendimentoCaixaBanco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letra_senha', models.CharField(max_length=10, verbose_name='Letra da Senha')),
                ('horario_chegada', models.TimeField(verbose_name='Horário de Chegada')),
                ('horario_atendimento', models.TimeField(verbose_name='Horário de Atendimento')),
                ('tempo_decorrido', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)], verbose_name='Tempo Decorrido (minutos)')),
            ],
            options={
                'verbose_name': 'Atendimento de Caixa',
                'verbose_name_plural': 'Atendimentos de Caixa',
                'ordering': ['horario_chegada'],
            },
        ),
        migrations.CreateModel(
            name='AutoApreensaoInutilizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('apreensao', 'Auto de Apreensão'), ('inutilizacao', 'Inutilização')], default='apreensao', max_length=20)),
                ('numero_documento', models.CharField(blank=True, max_length=20)),
                ('ano_documento', models.IntegerField(default=2025)),
                ('razao_social', models.CharField(max_length=200, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(max_length=200, verbose_name='Nome Fantasia')),
                ('atividade', models.CharField(max_length=200, verbose_name='Atividade')),
                ('endereco', models.TextField(verbose_name='Endereço')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('municipio', models.CharField(max_length=100, verbose_name='Município')),
                ('estado', models.CharField(default='AM', max_length=2, verbose_name='Estado')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('cominacao_legal', models.TextField(verbose_name='Cominação Legal')),
                ('auto_constatacao_numero', models.CharField(max_length=20, verbose_name='Auto de Constatação Nº')),
                ('itens', models.JSONField(default=list, verbose_name='Lista de Itens')),
                ('necessita_pericia', models.BooleanField(default=False, verbose_name='Necessita Perícia')),
                ('justificativa_pericia', models.TextField(blank=True, verbose_name='Justificativa')),
                ('local', models.CharField(max_length=200, verbose_name='Local')),
                ('data_fiscalizacao', models.DateField(verbose_name='Data')),
                ('hora_inicio', models.TimeField(verbose_name='Hora do Início')),
                ('hora_termino', models.TimeField(verbose_name='Hora do Término')),
                ('fiscal_1', models.CharField(max_length=100, verbose_name='Fiscal 1')),
                ('fiscal_2', models.CharField(max_length=100, verbose_name='Fiscal 2')),
                ('responsavel_estabelecimento', models.CharField(max_length=100, verbose_name='Nome do Responsável')),
                ('cpf_responsavel', models.CharField(max_length=14, verbose_name='CPF do Responsável')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Auto de Apreensão/Inutilização',
                'verbose_name_plural': 'Autos de Apreensão/Inutilização',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutoBanco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('numero', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número do Auto')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('atividade', models.CharField(max_length=255, verbose_name='Atividade')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('municipio', models.CharField(max_length=100, verbose_name='Município')),
                ('estado', models.CharField(default='AM', max_length=50, verbose_name='Estado')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('data_fiscalizacao', models.DateField(verbose_name='Data da Fiscalização')),
                ('hora_fiscalizacao', models.TimeField(verbose_name='Hora da Fiscalização')),
                ('origem', models.CharField(choices=[('acao', 'Ação Fiscalizatória'), ('denuncia', 'Denúncia'), ('forca_tarefa', 'Força Tarefa'), ('outros', 'Outros')], default='acao', max_length=20, verbose_name='Origem')),
                ('origem_outros', models.CharField(blank=True, max_length=255, verbose_name='Outras Origens')),
                ('fiscal_nome_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 1º Fiscal')),
                ('fiscal_nome_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 2º Fiscal')),
                ('responsavel_nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Responsável')),
                ('responsavel_cpf', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF/RG do Responsável')),
                ('assinatura_fiscal_1', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 1')),
                ('assinatura_fiscal_2', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 2')),
                ('assinatura_representante', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Representante')),
                ('porte', models.CharField(blank=True, choices=[('microempresa', 'Microempresa'), ('pequeno', 'Pequeno Porte'), ('medio', 'Médio Porte'), ('grande', 'Grande Porte')], max_length=100, verbose_name='Porte')),
                ('atuacao', models.CharField(blank=True, max_length=100, verbose_name='Atuação')),
                ('nada_consta', models.BooleanField(default=False, verbose_name='Nada Consta')),
                ('sem_irregularidades', models.BooleanField(default=False, verbose_name='Não foram encontradas irregularidades')),
                ('todos_caixas_funcionando', models.BooleanField(blank=True, null=True, verbose_name='Todos os caixas em funcionamento?')),
                ('distribuiu_senha', models.BooleanField(blank=True, null=True, verbose_name='Distribuiu senha?')),
                ('distribuiu_senha_fora_padrao', models.BooleanField(blank=True, null=True, verbose_name='Distribuiu senha fora do padrão?')),
                ('ausencia_cartaz_informativo', models.BooleanField(default=False, verbose_name='Ausência de Cartaz Informativo?')),
                ('ausencia_profissional_libras', models.BooleanField(default=False, verbose_name='Ausência de profissional de LIBRAS?')),
                ('senha_sem_nome_estabelecimento', models.BooleanField(default=False, verbose_name='Senha sem nome do estabelecimento?')),
                ('senha_sem_horarios', models.BooleanField(default=False, verbose_name='Senha sem horários?')),
                ('senha_sem_rubrica', models.BooleanField(default=False, verbose_name='Senha sem rubrica?')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
            ],
            options={
                'verbose_name': 'Auto de Banco',
                'verbose_name_plural': 'Autos de Banco',
                'ordering': ['-data_fiscalizacao'],
            },
        ),
        migrations.CreateModel(
            name='AutoDiversos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('numero', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número do Auto')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('atividade', models.CharField(max_length=255, verbose_name='Atividade')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('municipio', models.CharField(max_length=100, verbose_name='Município')),
                ('estado', models.CharField(default='AM', max_length=50, verbose_name='Estado')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('data_fiscalizacao', models.DateField(verbose_name='Data da Fiscalização')),
                ('hora_fiscalizacao', models.TimeField(verbose_name='Hora da Fiscalização')),
                ('origem', models.CharField(choices=[('acao', 'Ação Fiscalizatória'), ('denuncia', 'Denúncia'), ('forca_tarefa', 'Força Tarefa'), ('outros', 'Outros')], default='acao', max_length=20, verbose_name='Origem')),
                ('origem_outros', models.CharField(blank=True, max_length=255, verbose_name='Outras Origens')),
                ('fiscal_nome_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 1º Fiscal')),
                ('fiscal_nome_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 2º Fiscal')),
                ('responsavel_nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Responsável')),
                ('responsavel_cpf', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF/RG do Responsável')),
                ('assinatura_fiscal_1', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 1')),
                ('assinatura_fiscal_2', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 2')),
                ('assinatura_representante', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Representante')),
                ('porte', models.CharField(blank=True, choices=[('microempresa', 'Microempresa'), ('pequeno', 'Pequeno Porte'), ('medio', 'Médio Porte'), ('grande', 'Grande Porte')], max_length=100, verbose_name='Porte')),
                ('atuacao', models.CharField(blank=True, max_length=100, verbose_name='Atuação')),
                ('publicidade_enganosa', models.BooleanField(default=False, verbose_name='Publicidade enganosa')),
                ('afixacao_precos_fora_padrao', models.BooleanField(default=False, verbose_name='Afixação de preços fora do padrão')),
                ('ausencia_afixacao_precos', models.BooleanField(default=False, verbose_name='Ausência de afixação de preços')),
                ('afixacao_precos_eletronico_fora_padrao', models.BooleanField(default=False, verbose_name='Afixação de preços no comércio eletrônico fora do padrão')),
                ('ausencia_afixacao_precos_eletronico', models.BooleanField(default=False, verbose_name='Ausência de afixação de preços no comércio eletrônico')),
                ('afixacao_precos_fracionados_fora_padrao', models.BooleanField(default=False, verbose_name='Afixação de preços na venda a varejo de produtos fracionados fora do padrão')),
                ('ausencia_visibilidade_descontos', models.BooleanField(default=False, verbose_name='Ausência de visibilidade de descontos')),
                ('ausencia_exemplar_cdc', models.BooleanField(default=False, verbose_name='Ausência do exemplar do CDC em local visível')),
                ('substituicao_troco', models.BooleanField(default=False, verbose_name='Substituição do troco em dinheiro por outros produtos não consentidos')),
                ('advertencia', models.BooleanField(default=False, verbose_name='Houve Advertência?')),
                ('outras_irregularidades', models.TextField(blank=True, verbose_name='Outras Irregularidades Constatadas/Outras Cominações Legais')),
                ('narrativa_fatos', models.TextField(blank=True, verbose_name='Narrativa dos Fatos')),
                ('receita_bruta_notificada', models.BooleanField(default=True, verbose_name='Receita Bruta Notificada?')),
            ],
            options={
                'verbose_name': 'Auto Diversos',
                'verbose_name_plural': 'Autos Diversos',
                'ordering': ['-data_fiscalizacao'],
            },
        ),
        migrations.CreateModel(
            name='AutoInfracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número da Infração')),
                ('data_fiscalizacao', models.DateField(verbose_name='Data da Fiscalização')),
                ('hora_fiscalizacao', models.TimeField(verbose_name='Hora da Fiscalização')),
                ('municipio', models.CharField(default='MANAUS', max_length=100, verbose_name='Município')),
                ('estado', models.CharField(default='AMAZONAS', max_length=2, verbose_name='Estado')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('atividade', models.CharField(default='Não informado', max_length=255, verbose_name='Atividade')),
                ('endereco', models.CharField(max_length=500, verbose_name='Endereço')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('parecer_numero', models.CharField(blank=True, help_text='Ex: 152/2025', max_length=50, verbose_name='Número do Parecer')),
                ('parecer_origem', models.CharField(default='FISCALIZAÇÃO/PROCON/AM', max_length=100, verbose_name='Origem do Parecer')),
                ('relatorio', models.TextField(help_text='Narrativa detalhada dos fatos constatados durante a fiscalização', verbose_name='Relatório')),
                ('base_legal_cdc', models.TextField(help_text='Artigos do CDC violados', verbose_name='Base Legal CDC')),
                ('base_legal_outras', models.TextField(blank=True, help_text='Outras leis e decretos aplicáveis', verbose_name='Outras Bases Legais')),
                ('infracao_art_34', models.BooleanField(default=False, verbose_name='Art. 34 CDC')),
                ('infracao_art_35', models.BooleanField(default=False, verbose_name='Art. 35 CDC')),
                ('infracao_art_36', models.BooleanField(default=False, verbose_name='Art. 36 CDC')),
                ('infracao_art_55', models.BooleanField(default=False, verbose_name='Art. 55 CDC')),
                ('infracao_art_56', models.BooleanField(default=False, verbose_name='Art. 56 CDC')),
                ('infracao_publicidade_enganosa', models.BooleanField(default=False, verbose_name='Publicidade Enganosa')),
                ('infracao_precos_abusivos', models.BooleanField(default=False, verbose_name='Preços Abusivos')),
                ('infracao_produtos_vencidos', models.BooleanField(default=False, verbose_name='Produtos Vencidos')),
                ('infracao_falta_informacao', models.BooleanField(default=False, verbose_name='Falta de Informação')),
                ('outras_infracoes', models.TextField(blank=True, verbose_name='Outras Infrações')),
                ('fundamentacao_tecnica', models.TextField(blank=True, help_text='Fundamentação técnica da autuação', verbose_name='Fundamentação Técnica')),
                ('fundamentacao_juridica', models.TextField(blank=True, help_text='Fundamentação jurídica da autuação', verbose_name='Fundamentação Jurídica')),
                ('valor_multa', models.DecimalField(decimal_places=2, help_text='Valor da multa aplicada', max_digits=12, verbose_name='Valor da Multa (R$)')),
                ('responsavel_nome', models.CharField(max_length=255, verbose_name='Nome do Responsável')),
                ('responsavel_cpf', models.CharField(max_length=14, verbose_name='CPF do Responsável')),
                ('responsavel_funcao', models.CharField(blank=True, max_length=100, verbose_name='Função/Cargo')),
                ('fiscal_nome', models.CharField(max_length=255, verbose_name='Nome do Fiscal')),
                ('fiscal_cargo', models.CharField(default='Agente de Fiscalização', max_length=100, verbose_name='Cargo do Fiscal')),
                ('estabelecimento_responsavel', models.CharField(blank=True, max_length=255, verbose_name='Responsável pelo Estabelecimento')),
                ('data_notificacao', models.DateField(blank=True, null=True, verbose_name='Data de Notificação')),
                ('data_vencimento', models.DateField(blank=True, null=True, verbose_name='Data de Vencimento')),
                ('status', models.CharField(choices=[('autuado', 'Autuado'), ('notificado', 'Notificado'), ('em_defesa', 'Em Defesa'), ('julgado', 'Julgado'), ('pago', 'Pago'), ('cancelado', 'Cancelado')], default='autuado', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('possui_anexo', models.BooleanField(default=False, verbose_name='Possui Anexo?')),
                ('descricao_anexo', models.TextField(blank=True, verbose_name='Descrição dos Anexos')),
                ('assinatura_fiscal', models.ImageField(blank=True, null=True, upload_to='assinaturas/infrações/', verbose_name='Assinatura do Fiscal')),
                ('assinatura_responsavel', models.ImageField(blank=True, null=True, upload_to='assinaturas/infrações/', verbose_name='Assinatura do Responsável')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Auto de Infração',
                'verbose_name_plural': 'Autos de Infração',
                'ordering': ['-data_fiscalizacao', '-numero'],
            },
        ),
        migrations.CreateModel(
            name='AutoInfracaoAvancado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gerado_automaticamente', models.BooleanField(default=False, verbose_name='Gerado Automaticamente')),
                ('template_utilizado', models.CharField(blank=True, max_length=100, verbose_name='Template Utilizado')),
                ('data_geracao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Geração')),
                ('assinatura_digital', models.BooleanField(default=False, verbose_name='Assinatura Digital')),
                ('certificado_assinatura', models.CharField(blank=True, max_length=255, verbose_name='Certificado de Assinatura')),
                ('data_assinatura', models.DateTimeField(blank=True, null=True, verbose_name='Data de Assinatura')),
                ('notificacao_eletronica', models.BooleanField(default=False, verbose_name='Notificação Eletrônica')),
                ('email_notificacao', models.EmailField(blank=True, max_length=254, verbose_name='Email de Notificação')),
                ('data_notificacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Notificação')),
                ('protocolo_notificacao', models.CharField(blank=True, max_length=100, verbose_name='Protocolo de Notificação')),
                ('prazo_defesa', models.IntegerField(default=30, verbose_name='Prazo para Defesa (dias)')),
                ('data_limite_defesa', models.DateField(blank=True, null=True, verbose_name='Data Limite para Defesa')),
                ('prazo_pagamento', models.IntegerField(default=30, verbose_name='Prazo para Pagamento (dias)')),
                ('data_limite_pagamento', models.DateField(blank=True, null=True, verbose_name='Data Limite para Pagamento')),
                ('status_workflow', models.CharField(choices=[('RASCUNHO', 'Rascunho'), ('EM_ANALISE', 'Em Análise'), ('APROVADO', 'Aprovado'), ('ASSINADO', 'Assinado'), ('NOTIFICADO', 'Notificado'), ('EM_DEFESA', 'Em Defesa'), ('JULGADO', 'Julgado'), ('PAGO', 'Pago'), ('CANCELADO', 'Cancelado')], default='RASCUNHO', max_length=20, verbose_name='Status do Workflow')),
                ('versao_documento', models.CharField(default='1.0', max_length=20, verbose_name='Versão do Documento')),
                ('hash_documento', models.CharField(blank=True, max_length=64, verbose_name='Hash do Documento')),
                ('data_modificacao', models.DateTimeField(auto_now=True, verbose_name='Data de Modificação')),
            ],
            options={
                'verbose_name': 'Auto de Infração Avançado',
                'verbose_name_plural': 'Autos de Infração Avançados',
                'ordering': ['-data_modificacao'],
            },
        ),
        migrations.CreateModel(
            name='AutoPosto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('numero', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número do Auto')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('atividade', models.CharField(max_length=255, verbose_name='Atividade')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('municipio', models.CharField(max_length=100, verbose_name='Município')),
                ('estado', models.CharField(default='AM', max_length=50, verbose_name='Estado')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('data_fiscalizacao', models.DateField(verbose_name='Data da Fiscalização')),
                ('hora_fiscalizacao', models.TimeField(verbose_name='Hora da Fiscalização')),
                ('origem', models.CharField(choices=[('acao', 'Ação Fiscalizatória'), ('denuncia', 'Denúncia'), ('forca_tarefa', 'Força Tarefa'), ('outros', 'Outros')], default='acao', max_length=20, verbose_name='Origem')),
                ('origem_outros', models.CharField(blank=True, max_length=255, verbose_name='Outras Origens')),
                ('fiscal_nome_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 1º Fiscal')),
                ('fiscal_nome_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 2º Fiscal')),
                ('responsavel_nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Responsável')),
                ('responsavel_cpf', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF/RG do Responsável')),
                ('assinatura_fiscal_1', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 1')),
                ('assinatura_fiscal_2', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 2')),
                ('assinatura_representante', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Representante')),
                ('porte', models.CharField(blank=True, choices=[('microempresa', 'Microempresa'), ('pequeno', 'Pequeno Porte'), ('medio', 'Médio Porte'), ('grande', 'Grande Porte')], max_length=20, null=True, verbose_name='Porte da Empresa')),
                ('atuacao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Atuação')),
                ('nada_consta', models.BooleanField(default=False, verbose_name='Nada Consta')),
                ('sem_irregularidades', models.BooleanField(default=False, verbose_name='Sem Irregularidades')),
                ('preco_gasolina_comum', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Preço Gasolina Comum (R$/litro)')),
                ('preco_gasolina_aditivada', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Preço Gasolina Aditivada (R$/litro)')),
                ('preco_etanol', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Preço Etanol (R$/litro)')),
                ('preco_diesel_comum', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Preço Diesel Comum (R$/litro)')),
                ('preco_diesel_s10', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Preço Diesel S-10 (R$/litro)')),
                ('preco_gnv', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Preço GNV (R$/m³)')),
                ('nao_vende_gas_comum', models.BooleanField(default=False, verbose_name='Não vende Gasolina Comum')),
                ('nao_vende_gas_aditivada', models.BooleanField(default=False, verbose_name='Não vende Gasolina Aditivada')),
                ('nao_vende_etanol', models.BooleanField(default=False, verbose_name='Não vende Etanol')),
                ('nao_vende_diesel_comum', models.BooleanField(default=False, verbose_name='Não vende Diesel Comum')),
                ('nao_vende_diesel_s10', models.BooleanField(default=False, verbose_name='Não vende Diesel S-10')),
                ('nao_vende_gnv', models.BooleanField(default=False, verbose_name='Não vende GNV')),
                ('prazo_envio_documentos', models.IntegerField(default=48, verbose_name='Prazo para envio de documentos (horas)')),
                ('info_adicionais', models.TextField(blank=True, null=True, verbose_name='Informações Adicionais')),
                ('outras_irregularidades', models.TextField(blank=True, null=True, verbose_name='Outras Irregularidades Constatadas')),
                ('dispositivos_legais', models.TextField(blank=True, null=True, verbose_name='Dispositivos Legais Infringidos')),
                ('matricula_fiscal_1', models.CharField(blank=True, help_text='Matrícula do fiscal responsável pela fiscalização', max_length=20, null=True, verbose_name='Matrícula do Fiscal 1')),
            ],
            options={
                'verbose_name': 'Auto de Posto',
                'verbose_name_plural': 'Autos de Posto',
                'ordering': ['-data_fiscalizacao'],
            },
        ),
        migrations.CreateModel(
            name='AutoSupermercado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('numero', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número do Auto')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('atividade', models.CharField(max_length=255, verbose_name='Atividade')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('municipio', models.CharField(max_length=100, verbose_name='Município')),
                ('estado', models.CharField(default='AM', max_length=50, verbose_name='Estado')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('data_fiscalizacao', models.DateField(verbose_name='Data da Fiscalização')),
                ('hora_fiscalizacao', models.TimeField(verbose_name='Hora da Fiscalização')),
                ('origem', models.CharField(choices=[('acao', 'Ação Fiscalizatória'), ('denuncia', 'Denúncia'), ('forca_tarefa', 'Força Tarefa'), ('outros', 'Outros')], default='acao', max_length=20, verbose_name='Origem')),
                ('origem_outros', models.CharField(blank=True, max_length=255, verbose_name='Outras Origens')),
                ('fiscal_nome_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 1º Fiscal')),
                ('fiscal_nome_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do 2º Fiscal')),
                ('responsavel_nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Responsável')),
                ('responsavel_cpf', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF/RG do Responsável')),
                ('assinatura_fiscal_1', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 1')),
                ('assinatura_fiscal_2', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Fiscal 2')),
                ('assinatura_representante', models.ImageField(blank=True, null=True, upload_to='assinaturas/', verbose_name='Assinatura Representante')),
                ('comercializar_produtos_vencidos', models.BooleanField(default=False, verbose_name='Comercializar produtos vencidos')),
                ('comercializar_embalagem_violada', models.BooleanField(default=False, verbose_name='Comercializar produtos com embalagem violada')),
                ('comercializar_lata_amassada', models.BooleanField(default=False, verbose_name='Comercializar produtos com lata amassada')),
                ('comercializar_sem_validade', models.BooleanField(default=False, verbose_name='Comercializar produtos sem validade ou com validade ilegível')),
                ('comercializar_mal_armazenados', models.BooleanField(default=False, verbose_name='Comercializar produtos mal armazenados')),
                ('comercializar_descongelados', models.BooleanField(default=False, verbose_name='Comercializar produtos parcialmente/totalmente descongelados')),
                ('publicidade_enganosa', models.BooleanField(default=False, verbose_name='Publicidade enganosa')),
                ('obstrucao_monitor', models.BooleanField(default=False, verbose_name='Obstrução do monitor')),
                ('afixacao_precos_fora_padrao', models.BooleanField(default=False, verbose_name='Afixação de preços fora do padrão')),
                ('ausencia_afixacao_precos', models.BooleanField(default=False, verbose_name='Ausência de afixação de preços')),
                ('afixacao_precos_fracionados_fora_padrao', models.BooleanField(default=False, verbose_name='Afixação de preços na venda a varejo de produtos fracionados fora do padrão')),
                ('ausencia_visibilidade_descontos', models.BooleanField(default=False, verbose_name='Ausência de visibilidade de descontos')),
                ('ausencia_placas_promocao_vencimento', models.BooleanField(default=False, verbose_name='Ausência das placas ou cartazes informativos acerca da data de validade de produtos em promoção')),
                ('nada_consta', models.BooleanField(default=False, verbose_name='Nada Consta')),
                ('outras_irregularidades', models.TextField(blank=True, verbose_name='Outras Irregularidades Constatadas/Outras Cominações Legais')),
                ('narrativa_fatos', models.TextField(blank=True, verbose_name='Narrativa dos Fatos')),
                ('possui_anexo', models.BooleanField(default=False, verbose_name='Possui Anexo?')),
                ('auto_apreensao', models.BooleanField(default=False, verbose_name='Gerou Auto de Apreensão/Inutilização?')),
                ('auto_apreensao_numero', models.CharField(blank=True, max_length=50, verbose_name='Nº do Auto de Apreensão')),
                ('necessita_pericia', models.BooleanField(blank=True, null=True, verbose_name='Os itens apreendidos necessitam de perícia?')),
                ('justificativa_pericia', models.TextField(blank=True, verbose_name='Justificativa da Perícia')),
                ('receita_bruta_notificada', models.BooleanField(default=True, verbose_name='Receita Bruta Notificada?')),
                ('cominacao_legal', models.TextField(blank=True, verbose_name='Cominação Legal')),
                ('instrucoes_fiscalizado', models.TextField(blank=True, verbose_name='Instruções ao Fiscalizado')),
                ('prazo_cumprimento_dias', models.IntegerField(default=5, verbose_name='Prazo para Cumprimento (dias)')),
            ],
            options={
                'verbose_name': 'Auto de Supermercado',
                'verbose_name_plural': 'Autos de Supermercado',
                'ordering': ['-data_fiscalizacao'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoFiscalizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_tamanho_arquivo', models.IntegerField(default=10, verbose_name='Tamanho Máximo de Arquivo (MB)')),
                ('tipos_arquivo_permitidos', models.JSONField(default=list, verbose_name='Tipos de Arquivo Permitidos')),
                ('max_arquivos_por_auto', models.IntegerField(default=20, verbose_name='Máximo de Arquivos por Auto')),
                ('assinatura_digital_obrigatoria', models.BooleanField(default=True, verbose_name='Assinatura Digital Obrigatória')),
                ('prazo_assinatura_dias', models.IntegerField(default=7, verbose_name='Prazo para Assinatura (dias)')),
                ('certificado_digital_obrigatorio', models.BooleanField(default=False, verbose_name='Certificado Digital Obrigatório')),
                ('notificacao_automatica', models.BooleanField(default=True, verbose_name='Notificação Automática')),
                ('email_notificacao', models.EmailField(blank=True, max_length=254, verbose_name='Email para Notificações')),
                ('sms_notificacao', models.CharField(blank=True, max_length=20, verbose_name='SMS para Notificações')),
                ('prazo_defesa_dias', models.IntegerField(default=15, verbose_name='Prazo para Defesa (dias)')),
                ('prazo_recurso_dias', models.IntegerField(default=10, verbose_name='Prazo para Recurso (dias)')),
                ('alerta_prazo_dias', models.IntegerField(default=5, verbose_name='Alerta de Prazo (dias antes)')),
                ('backup_automatico', models.BooleanField(default=True, verbose_name='Backup Automático')),
                ('retencao_backup_dias', models.IntegerField(default=365, verbose_name='Retenção de Backup (dias)')),
            ],
            options={
                'verbose_name': 'Configuração de Fiscalização',
                'verbose_name_plural': 'Configurações de Fiscalização',
            },
        ),
        migrations.CreateModel(
            name='SequenciaAutos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField(unique=True, verbose_name='Ano')),
                ('ultimo_numero', models.IntegerField(default=0, verbose_name='Último Número Gerado')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Sequência de Auto',
                'verbose_name_plural': 'Sequências de Autos',
                'ordering': ['-ano'],
            },
        ),
        migrations.CreateModel(
            name='SequenciaAutosApreensao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField(unique=True, verbose_name='Ano')),
                ('ultimo_numero', models.IntegerField(default=0, verbose_name='Último Número Gerado')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Sequência de Auto de Apreensão',
                'verbose_name_plural': 'Sequências de Autos de Apreensão',
                'ordering': ['-ano'],
            },
        ),
        migrations.CreateModel(
            name='TipoFiscalizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('PRESENCIAL', 'Fiscalização Presencial'), ('REMOTA', 'Fiscalização Remota'), ('DENUNCIA', 'Denúncia'), ('ACAO_PREVENTIVA', 'Ação Preventiva'), ('FORCA_TAREFA', 'Força Tarefa'), ('MONITORAMENTO', 'Monitoramento'), ('AUDITORIA', 'Auditoria')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Tipo de Fiscalização',
                'verbose_name_plural': 'Tipos de Fiscalização',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='TemplateAutoInfracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('configuracao', models.JSONField(default=dict, verbose_name='Configuração')),
                ('campos_obrigatorios', models.JSONField(default=list, verbose_name='Campos Obrigatórios')),
                ('campos_opcionais', models.JSONField(default=list, verbose_name='Campos Opcionais')),
                ('base_legal_padrao', models.TextField(blank=True, verbose_name='Base Legal Padrão')),
                ('fundamentacao_padrao', models.TextField(blank=True, verbose_name='Fundamentação Padrão')),
                ('valor_multa_padrao', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da Multa Padrão')),
                ('prazo_defesa_padrao', models.IntegerField(default=30, verbose_name='Prazo para Defesa Padrão (dias)')),
                ('prazo_pagamento_padrao', models.IntegerField(default=30, verbose_name='Prazo para Pagamento Padrão (dias)')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('padrao', models.BooleanField(default=False, verbose_name='Template Padrão')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates_fiscalizacao_criados', to=settings.AUTH_USER_MODEL)),
                ('tipo_fiscalizacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='fiscalizacao.tipofiscalizacao')),
            ],
            options={
                'verbose_name': 'Template de Auto de Infração',
                'verbose_name_plural': 'Templates de Autos de Infração',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Processo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_processo', models.CharField(blank=True, help_text='Gerado automaticamente no formato PROC-00001/2025', max_length=25, unique=True, verbose_name='Número do Processo')),
                ('autuado', models.CharField(help_text='Razão social da empresa autuada', max_length=255, verbose_name='Autuado (Razão Social)')),
                ('cnpj', models.CharField(help_text='CNPJ da empresa autuada', max_length=18, verbose_name='CNPJ')),
                ('status', models.CharField(choices=[('aguardando_defesa', 'Aguardando Defesa'), ('defesa_apresentada', 'Defesa Apresentada'), ('em_analise', 'Em Análise'), ('aguardando_recurso', 'Aguardando Recurso'), ('recurso_apresentado', 'Recurso Apresentado'), ('julgamento', 'Em Julgamento'), ('finalizado_procedente', 'Finalizado - Procedente'), ('finalizado_improcedente', 'Finalizado - Improcedente'), ('arquivado', 'Arquivado'), ('prescrito', 'Prescrito')], default='aguardando_defesa', max_length=50, verbose_name='Status do Processo')),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('normal', 'Normal'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='normal', max_length=20, verbose_name='Prioridade')),
                ('prazo_defesa', models.DateField(blank=True, help_text='Data limite para apresentação da defesa', null=True, verbose_name='Prazo para Defesa')),
                ('prazo_recurso', models.DateField(blank=True, help_text='Data limite para apresentação do recurso', null=True, verbose_name='Prazo para Recurso')),
                ('data_notificacao', models.DateField(blank=True, null=True, verbose_name='Data de Notificação')),
                ('data_defesa', models.DateField(blank=True, null=True, verbose_name='Data da Defesa')),
                ('data_recurso', models.DateField(blank=True, null=True, verbose_name='Data do Recurso')),
                ('data_julgamento', models.DateField(blank=True, null=True, verbose_name='Data do Julgamento')),
                ('data_finalizacao', models.DateField(blank=True, null=True, verbose_name='Data de Finalização')),
                ('valor_multa', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor da Multa (R$)')),
                ('valor_final', models.DecimalField(blank=True, decimal_places=2, help_text='Valor após recursos e decisão final', max_digits=10, null=True, verbose_name='Valor Final (R$)')),
                ('fiscal_responsavel', models.CharField(blank=True, help_text='Fiscal que conduziu a fiscalização', max_length=255, verbose_name='Fiscal Responsável')),
                ('analista_responsavel', models.CharField(blank=True, help_text='Analista responsável pela análise do processo', max_length=255, verbose_name='Analista Responsável')),
                ('observacoes', models.TextField(blank=True, help_text='Observações gerais sobre o processo', verbose_name='Observações')),
                ('observacoes_internas', models.TextField(blank=True, help_text='Observações internas não incluídas nos documentos', verbose_name='Observações Internas')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('auto_infracao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='processo', to='fiscalizacao.autoinfracao', verbose_name='Auto de Infração')),
            ],
            options={
                'verbose_name': 'Processo Administrativo',
                'verbose_name_plural': 'Processos Administrativos',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='NotificacaoEletronica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_notificacao', models.CharField(choices=[('auto_infracao', 'Auto de Infração'), ('prazo_vencendo', 'Prazo Vencendo'), ('prazo_vencido', 'Prazo Vencido'), ('defesa_apresentada', 'Defesa Apresentada'), ('recurso_apresentado', 'Recurso Apresentado'), ('decisao_proferida', 'Decisão Proferida')], max_length=20, verbose_name='Tipo de Notificação')),
                ('destinatario_nome', models.CharField(max_length=255, verbose_name='Nome do Destinatário')),
                ('destinatario_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email do Destinatário')),
                ('destinatario_cpf_cnpj', models.CharField(blank=True, max_length=18, null=True, verbose_name='CPF/CNPJ do Destinatário')),
                ('assunto', models.CharField(max_length=255, verbose_name='Assunto')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('anexos', models.JSONField(blank=True, default=list, verbose_name='Anexos')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('enviada', 'Enviada'), ('entregue', 'Entregue'), ('lida', 'Lida'), ('erro', 'Erro')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_envio', models.DateTimeField(blank=True, null=True, verbose_name='Data de Envio')),
                ('data_entrega', models.DateTimeField(blank=True, null=True, verbose_name='Data de Entrega')),
                ('data_leitura', models.DateTimeField(blank=True, null=True, verbose_name='Data de Leitura')),
                ('tentativas_envio', models.IntegerField(default=0, verbose_name='Tentativas de Envio')),
                ('max_tentativas', models.IntegerField(default=3, verbose_name='Máximo de Tentativas')),
                ('proxima_tentativa', models.DateTimeField(blank=True, null=True, verbose_name='Próxima Tentativa')),
                ('logs_envio', models.JSONField(blank=True, default=list, verbose_name='Logs de Envio')),
                ('auto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='fiscalizacao.autobanco')),
                ('auto_diversos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='fiscalizacao.autodiversos')),
                ('auto_posto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='fiscalizacao.autoposto')),
                ('auto_supermercado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='fiscalizacao.autosupermercado')),
            ],
            options={
                'verbose_name': 'Notificação Eletrônica',
                'verbose_name_plural': 'Notificações Eletrônicas',
                'ordering': ['-data_envio'],
            },
        ),
        migrations.CreateModel(
            name='NotaFiscalPosto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_nota', models.CharField(choices=[('aumento', 'Último Aumento'), ('anterior', 'Anteriores')], max_length=10, verbose_name='Tipo da Nota')),
                ('produto', models.CharField(choices=[('gas_comum', 'Gasolina Comum'), ('gas_aditivada', 'Gasolina Aditivada'), ('etanol', 'Etanol'), ('diesel_comum', 'Diesel Comum'), ('diesel_s10', 'Diesel S-10'), ('gnv', 'GNV')], max_length=20, verbose_name='Produto')),
                ('numero_nota', models.CharField(max_length=50, verbose_name='Número da Nota Fiscal')),
                ('data', models.DateField(verbose_name='Data da Nota')),
                ('preco', models.DecimalField(decimal_places=3, max_digits=6, verbose_name='Preço por Litro')),
                ('auto_posto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_fiscais', to='fiscalizacao.autoposto')),
            ],
            options={
                'verbose_name': 'Nota Fiscal do Posto',
                'verbose_name_plural': 'Notas Fiscais do Posto',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='ItemApreensaoInutilizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=100, verbose_name='Item')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('unidade', models.CharField(max_length=20, verbose_name='Unidade')),
                ('especificacao', models.TextField(verbose_name='Especificação')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário')),
                ('motivo_apreensao', models.TextField(verbose_name='Motivo da Apreensão/Inutilização')),
                ('auto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_detalhados', to='fiscalizacao.autoapreensaoinutilizacao')),
            ],
            options={
                'verbose_name': 'Item Apreendido/Inutilizado',
                'verbose_name_plural': 'Itens Apreendidos/Inutilizados',
            },
        ),
        migrations.CreateModel(
            name='HistoricoStatusInfracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(blank=True, choices=[('autuado', 'Autuado'), ('notificado', 'Notificado'), ('em_defesa', 'Em Defesa'), ('em_recurso', 'Em Recurso'), ('finalizado', 'Finalizado'), ('arquivado', 'Arquivado')], max_length=20, null=True, verbose_name='Status Anterior')),
                ('status_novo', models.CharField(choices=[('autuado', 'Autuado'), ('notificado', 'Notificado'), ('em_defesa', 'Em Defesa'), ('em_recurso', 'Em Recurso'), ('finalizado', 'Finalizado'), ('arquivado', 'Arquivado')], max_length=20, verbose_name='Status Novo')),
                ('data_mudanca', models.DateTimeField(auto_now_add=True, verbose_name='Data da Mudança')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('usuario', models.CharField(blank=True, max_length=255, verbose_name='Usuário')),
                ('auto_infracao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_status', to='fiscalizacao.autoinfracao')),
            ],
            options={
                'verbose_name': 'Histórico de Status',
                'verbose_name_plural': 'Históricos de Status',
                'ordering': ['-data_mudanca'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoProcesso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(blank=True, max_length=50, null=True, verbose_name='Status Anterior')),
                ('status_novo', models.CharField(max_length=50, verbose_name='Status Novo')),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
                ('usuario', models.CharField(blank=True, help_text='Usuário que fez a alteração', max_length=255, verbose_name='Usuário')),
                ('data_mudanca', models.DateTimeField(auto_now_add=True, verbose_name='Data da Mudança')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='fiscalizacao.processo')),
            ],
            options={
                'verbose_name': 'Histórico do Processo',
                'verbose_name_plural': 'Históricos dos Processos',
                'ordering': ['-data_mudanca'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoAutoInfracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=100, verbose_name='Ação')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('dados_anteriores', models.JSONField(blank=True, null=True, verbose_name='Dados Anteriores')),
                ('dados_novos', models.JSONField(blank=True, null=True, verbose_name='Dados Novos')),
                ('data_acao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Ação')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('auto_infracao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='fiscalizacao.autoinfracao')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historico_autos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico de Auto de Infração',
                'verbose_name_plural': 'Histórico de Autos de Infração',
                'ordering': ['-data_acao'],
            },
        ),
        migrations.CreateModel(
            name='EvidenciaFotografica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_evidencia', models.CharField(choices=[('irregularidade', 'Irregularidade'), ('documento', 'Documento'), ('ambiente', 'Ambiente'), ('produto', 'Produto'), ('outros', 'Outros')], max_length=20, verbose_name='Tipo de Evidência')),
                ('descricao', models.TextField(verbose_name='Descrição da Evidência')),
                ('foto', models.ImageField(upload_to='evidencias_fiscais/', verbose_name='Foto')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data do Upload')),
                ('auto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidencias', to='fiscalizacao.autobanco')),
                ('auto_diversos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidencias', to='fiscalizacao.autodiversos')),
                ('auto_posto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidencias', to='fiscalizacao.autoposto')),
                ('auto_supermercado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidencias', to='fiscalizacao.autosupermercado')),
                ('fiscal_upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Fiscal Responsável')),
            ],
            options={
                'verbose_name': 'Evidência Fotográfica',
                'verbose_name_plural': 'Evidências Fotográficas',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='EvidenciaFiscalizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('FOTO', 'Foto'), ('VIDEO', 'Vídeo'), ('DOCUMENTO', 'Documento'), ('AUDIO', 'Áudio'), ('OUTROS', 'Outros')], max_length=20, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('arquivo', models.FileField(upload_to='evidencias_fiscalizacao/', verbose_name='Arquivo')),
                ('nome_arquivo', models.CharField(blank=True, max_length=255, verbose_name='Nome do Arquivo')),
                ('tamanho_arquivo', models.IntegerField(blank=True, null=True, verbose_name='Tamanho (bytes)')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('auto_infracao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidencias', to='fiscalizacao.autoinfracao')),
                ('upload_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evidencias_upload', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evidência de Fiscalização',
                'verbose_name_plural': 'Evidências de Fiscalização',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoProcesso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('defesa', 'Defesa'), ('recurso', 'Recurso'), ('parecer', 'Parecer Técnico'), ('decisao', 'Decisão'), ('outros', 'Outros')], max_length=20, verbose_name='Tipo do Documento')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('arquivo', models.FileField(upload_to='processos/documentos/%Y/%m/', verbose_name='Arquivo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data do Upload')),
                ('usuario_upload', models.CharField(blank=True, max_length=255, verbose_name='Usuário')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='fiscalizacao.processo')),
            ],
            options={
                'verbose_name': 'Documento do Processo',
                'verbose_name_plural': 'Documentos dos Processos',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='CupomFiscalPosto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_tabela', models.CharField(max_length=5, verbose_name='Item da Tabela')),
                ('dia', models.DateField(verbose_name='Dia do Cupom')),
                ('numero_cupom', models.CharField(max_length=50, verbose_name='Nº do Cupom')),
                ('produto', models.CharField(max_length=255, verbose_name='Produto')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor em R$')),
                ('percentual_diferenca', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Diferença (%)')),
                ('auto_posto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cupons_fiscais', to='fiscalizacao.autoposto')),
            ],
            options={
                'verbose_name': 'Cupom Fiscal do Posto',
                'verbose_name_plural': 'Cupons Fiscais do Posto',
                'ordering': ['-dia'],
            },
        ),
        migrations.CreateModel(
            name='ControlePrazos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_prazo', models.CharField(choices=[('defesa', 'Prazo para Defesa'), ('recurso', 'Prazo para Recurso'), ('envio_documentos', 'Prazo para Envio de Documentos'), ('pagamento', 'Prazo para Pagamento'), ('compliance', 'Prazo para Compliance'), ('outros', 'Outros')], max_length=20, verbose_name='Tipo de Prazo')),
                ('descricao', models.TextField(verbose_name='Descrição do Prazo')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de Fim')),
                ('data_prorrogacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Prorrogação')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('vencendo', 'Vencendo'), ('vencido', 'Vencido'), ('prorrogado', 'Prorrogado'), ('suspenso', 'Suspenso'), ('finalizado', 'Finalizado')], default='ativo', max_length=20, verbose_name='Status')),
                ('dias_restantes', models.IntegerField(blank=True, null=True, verbose_name='Dias Restantes')),
                ('alerta_5_dias', models.BooleanField(default=False, verbose_name='Alerta 5 dias antes')),
                ('alerta_3_dias', models.BooleanField(default=False, verbose_name='Alerta 3 dias antes')),
                ('alerta_1_dia', models.BooleanField(default=False, verbose_name='Alerta 1 dia antes')),
                ('alerta_vencido', models.BooleanField(default=False, verbose_name='Alerta vencido')),
                ('notificar_emails', models.JSONField(blank=True, default=list, verbose_name='Emails para Notificação')),
                ('historico_alteracoes', models.JSONField(blank=True, default=list, verbose_name='Histórico de Alterações')),
                ('auto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prazos', to='fiscalizacao.autobanco')),
                ('auto_diversos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prazos', to='fiscalizacao.autodiversos')),
                ('auto_posto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prazos', to='fiscalizacao.autoposto')),
                ('auto_supermercado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prazos', to='fiscalizacao.autosupermercado')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Controle de Prazo',
                'verbose_name_plural': 'Controle de Prazos',
                'ordering': ['data_fim'],
            },
        ),
        migrations.AddIndex(
            model_name='autosupermercado',
            index=models.Index(fields=['nada_consta'], name='fiscalizaca_nada_co_efeff7_idx'),
        ),
        migrations.AddIndex(
            model_name='autosupermercado',
            index=models.Index(fields=['comercializar_produtos_vencidos'], name='fiscalizaca_comerci_75aae1_idx'),
        ),
        migrations.AddIndex(
            model_name='autosupermercado',
            index=models.Index(fields=['prazo_cumprimento_dias'], name='fiscalizaca_prazo_c_f17aa3_idx'),
        ),
        migrations.AddIndex(
            model_name='autosupermercado',
            index=models.Index(fields=['auto_apreensao'], name='fiscalizaca_auto_ap_bac546_idx'),
        ),
        migrations.AddIndex(
            model_name='autoposto',
            index=models.Index(fields=['porte'], name='fiscalizaca_porte_39f4c4_idx'),
        ),
        migrations.AddIndex(
            model_name='autoposto',
            index=models.Index(fields=['nada_consta'], name='fiscalizaca_nada_co_dc7e2f_idx'),
        ),
        migrations.AddIndex(
            model_name='autoposto',
            index=models.Index(fields=['sem_irregularidades'], name='fiscalizaca_sem_irr_67b21c_idx'),
        ),
        migrations.AddIndex(
            model_name='autoposto',
            index=models.Index(fields=['preco_gasolina_comum'], name='fiscalizaca_preco_g_66997f_idx'),
        ),
        migrations.AddIndex(
            model_name='autoposto',
            index=models.Index(fields=['preco_etanol'], name='fiscalizaca_preco_e_373b2b_idx'),
        ),
        migrations.AddField(
            model_name='autoinfracaoavancado',
            name='assinado_por',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='autos_assinados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='autoinfracaoavancado',
            name='auto_infracao',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='avancado', to='fiscalizacao.autoinfracao'),
        ),
        migrations.AddField(
            model_name='autoinfracaoavancado',
            name='gerado_por',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='autos_gerados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='autoinfracaoavancado',
            name='modificado_por',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='autos_modificados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='autoinfracao',
            index=models.Index(fields=['numero'], name='fiscalizaca_numero_678cfe_idx'),
        ),
        migrations.AddIndex(
            model_name='autoinfracao',
            index=models.Index(fields=['data_fiscalizacao'], name='fiscalizaca_data_fi_5a613c_idx'),
        ),
        migrations.AddIndex(
            model_name='autoinfracao',
            index=models.Index(fields=['razao_social'], name='fiscalizaca_razao_s_6b19e9_idx'),
        ),
        migrations.AddIndex(
            model_name='autoinfracao',
            index=models.Index(fields=['cnpj'], name='fiscalizaca_cnpj_fbb38b_idx'),
        ),
        migrations.AddIndex(
            model_name='autoinfracao',
            index=models.Index(fields=['status'], name='fiscalizaca_status_2f02f9_idx'),
        ),
        migrations.AddIndex(
            model_name='autoinfracao',
            index=models.Index(fields=['valor_multa'], name='fiscalizaca_valor_m_2ee948_idx'),
        ),
        migrations.AddIndex(
            model_name='autoinfracao',
            index=models.Index(fields=['data_notificacao'], name='fiscalizaca_data_no_b48314_idx'),
        ),
        migrations.AddIndex(
            model_name='autodiversos',
            index=models.Index(fields=['porte'], name='fiscalizaca_porte_efd86b_idx'),
        ),
        migrations.AddIndex(
            model_name='autodiversos',
            index=models.Index(fields=['advertencia'], name='fiscalizaca_adverte_2dd363_idx'),
        ),
        migrations.AddIndex(
            model_name='autodiversos',
            index=models.Index(fields=['receita_bruta_notificada'], name='fiscalizaca_receita_2e932c_idx'),
        ),
        migrations.AddIndex(
            model_name='autobanco',
            index=models.Index(fields=['porte'], name='fiscalizaca_porte_c2ad60_idx'),
        ),
        migrations.AddIndex(
            model_name='autobanco',
            index=models.Index(fields=['nada_consta'], name='fiscalizaca_nada_co_9b4519_idx'),
        ),
        migrations.AddIndex(
            model_name='autobanco',
            index=models.Index(fields=['sem_irregularidades'], name='fiscalizaca_sem_irr_6514fa_idx'),
        ),
        migrations.AddField(
            model_name='autoapreensaoinutilizacao',
            name='auto_constatacao',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='autos_apreensao_inutilizacao', to='fiscalizacao.autosupermercado', verbose_name='Auto de Constatação'),
        ),
        migrations.AddField(
            model_name='autoapreensaoinutilizacao',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='atendimentocaixabanco',
            name='auto_banco',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos_caixa', to='fiscalizacao.autobanco'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='auto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais', to='fiscalizacao.autobanco'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='auto_diversos',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais', to='fiscalizacao.autodiversos'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='auto_posto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais', to='fiscalizacao.autoposto'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='auto_supermercado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais', to='fiscalizacao.autosupermercado'),
        ),
        migrations.AddField(
            model_name='anexoauto',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddIndex(
            model_name='processo',
            index=models.Index(fields=['numero_processo'], name='fiscalizaca_numero__29f692_idx'),
        ),
        migrations.AddIndex(
            model_name='processo',
            index=models.Index(fields=['status'], name='fiscalizaca_status_883a82_idx'),
        ),
        migrations.AddIndex(
            model_name='processo',
            index=models.Index(fields=['prazo_defesa'], name='fiscalizaca_prazo_d_ba6486_idx'),
        ),
        migrations.AddIndex(
            model_name='processo',
            index=models.Index(fields=['prioridade'], name='fiscalizaca_priorid_ac28a5_idx'),
        ),
        migrations.AddIndex(
            model_name='processo',
            index=models.Index(fields=['cnpj'], name='fiscalizaca_cnpj_329686_idx'),
        ),
    ]
