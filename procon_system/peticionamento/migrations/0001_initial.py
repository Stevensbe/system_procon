# Generated by Django 5.2.1 on 2025-08-29 14:17

import django.db.models.deletion
import peticionamento.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoPeticionamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sistema_ativo', models.BooleanField(default=True, verbose_name='Sistema Ativo')),
                ('manutencao', models.BooleanField(default=False, verbose_name='Em Manutenção')),
                ('mensagem_manutencao', models.TextField(blank=True, verbose_name='Mensagem de Manutenção')),
                ('prazo_padrao_resposta_dias', models.IntegerField(default=30, verbose_name='Prazo Padrão de Resposta (dias)')),
                ('prazo_urgente_resposta_dias', models.IntegerField(default=5, verbose_name='Prazo Urgente de Resposta (dias)')),
                ('prazo_notificacao_vencimento_dias', models.IntegerField(default=3, verbose_name='Notificar Vencimento (dias antes)')),
                ('tamanho_maximo_arquivo_mb', models.IntegerField(default=10, verbose_name='Tamanho Máximo por Arquivo (MB)')),
                ('numero_maximo_anexos', models.IntegerField(default=5, verbose_name='Número Máximo de Anexos')),
                ('tipos_arquivo_permitidos', models.TextField(default='pdf,doc,docx,jpg,jpeg,png,txt', help_text='Separados por vírgula', verbose_name='Tipos de Arquivo Permitidos')),
                ('validacao_automatica', models.BooleanField(default=True, verbose_name='Validação Automática')),
                ('validacao_manual_obrigatoria', models.BooleanField(default=False, verbose_name='Validação Manual Obrigatória')),
                ('verificar_virus', models.BooleanField(default=True, verbose_name='Verificar Vírus')),
                ('verificar_duplicatas', models.BooleanField(default=True, verbose_name='Verificar Duplicatas')),
                ('notificar_nova_peticao', models.BooleanField(default=True, verbose_name='Notificar Nova Petição')),
                ('notificar_vencimento_prazo', models.BooleanField(default=True, verbose_name='Notificar Vencimento de Prazo')),
                ('email_notificacao', models.EmailField(blank=True, max_length=254, verbose_name='E-mail para Notificações')),
                ('template_confirmacao_envio', models.TextField(blank=True, verbose_name='Template Confirmação de Envio')),
                ('template_recebimento', models.TextField(blank=True, verbose_name='Template Recebimento')),
                ('template_resposta', models.TextField(blank=True, verbose_name='Template Resposta')),
                ('exigir_captcha', models.BooleanField(default=True, verbose_name='Exigir CAPTCHA')),
                ('limitar_ip', models.BooleanField(default=False, verbose_name='Limitar por IP')),
                ('peticoes_por_ip_dia', models.IntegerField(default=10, verbose_name='Petições por IP/dia')),
                ('backup_automatico', models.BooleanField(default=True, verbose_name='Backup Automático')),
                ('dias_retencao_backup', models.IntegerField(default=30, verbose_name='Dias de Retenção do Backup')),
            ],
            options={
                'verbose_name': 'Configuração do Peticionamento',
                'verbose_name_plural': 'Configurações do Peticionamento',
            },
        ),
        migrations.CreateModel(
            name='PeticaoEletronica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_peticao', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Número da Petição')),
                ('protocolo_numero', models.CharField(blank=True, max_length=50, verbose_name='Número do Protocolo')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('assunto', models.CharField(max_length=200, verbose_name='Assunto')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('RASCUNHO', 'Rascunho'), ('ENVIADA', 'Enviada'), ('RECEBIDA', 'Recebida'), ('EM_ANALISE', 'Em Análise'), ('AGUARDANDO_INFO', 'Aguardando Informações'), ('RESPONDIDA', 'Respondida'), ('FINALIZADA', 'Finalizada'), ('CANCELADA', 'Cancelada'), ('REJEITADA', 'Rejeitada')], default='RASCUNHO', max_length=20, verbose_name='Status')),
                ('prioridade', models.CharField(choices=[('BAIXA', 'Baixa'), ('NORMAL', 'Normal'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='NORMAL', max_length=10, verbose_name='Prioridade')),
                ('origem', models.CharField(choices=[('PORTAL_CIDADAO', 'Portal do Cidadão'), ('SISTEMA_INTERNO', 'Sistema Interno'), ('API_EXTERNA', 'API Externa'), ('IMPORTACAO', 'Importação')], default='PORTAL_CIDADAO', max_length=20, verbose_name='Origem')),
                ('peticionario_nome', models.CharField(max_length=200, verbose_name='Nome do Peticionário')),
                ('peticionario_documento', models.CharField(max_length=20, verbose_name='CPF/CNPJ')),
                ('peticionario_email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('peticionario_telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('peticionario_endereco', models.TextField(blank=True, verbose_name='Endereço')),
                ('peticionario_cep', models.CharField(blank=True, max_length=10, verbose_name='CEP')),
                ('peticionario_cidade', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('peticionario_uf', models.CharField(blank=True, max_length=2, verbose_name='UF')),
                ('empresa_nome', models.CharField(blank=True, max_length=200, verbose_name='Nome da Empresa')),
                ('empresa_cnpj', models.CharField(blank=True, max_length=20, verbose_name='CNPJ da Empresa')),
                ('empresa_endereco', models.TextField(blank=True, verbose_name='Endereço da Empresa')),
                ('empresa_telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone da Empresa')),
                ('empresa_email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail da Empresa')),
                ('valor_causa', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor da Causa')),
                ('data_fato', models.DateField(blank=True, null=True, verbose_name='Data do Fato')),
                ('data_envio', models.DateTimeField(blank=True, null=True, verbose_name='Data de Envio')),
                ('prazo_resposta', models.DateTimeField(blank=True, null=True, verbose_name='Prazo para Resposta')),
                ('anonima', models.BooleanField(default=False, verbose_name='Petição Anônima')),
                ('confidencial', models.BooleanField(default=False, verbose_name='Confidencial')),
                ('notificar_peticionario', models.BooleanField(default=True, verbose_name='Notificar Peticionário')),
                ('dados_especificos', models.JSONField(blank=True, default=dict, verbose_name='Dados Específicos')),
                ('validada', models.BooleanField(default=False, verbose_name='Validada')),
                ('data_validacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Validação')),
                ('observacoes_validacao', models.TextField(blank=True, verbose_name='Observações da Validação')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('responsavel_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='peticoes_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável Atual')),
                ('usuario_criacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='peticoes_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('validada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Validada por')),
            ],
            options={
                'verbose_name': 'Petição Eletrônica',
                'verbose_name_plural': 'Petições Eletrônicas',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='InteracaoPeticao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_interacao', models.CharField(choices=[('CRIACAO', 'Criação'), ('ENVIO', 'Envio'), ('RECEBIMENTO', 'Recebimento'), ('ANALISE_INICIADA', 'Análise Iniciada'), ('SOLICITACAO_INFO', 'Solicitação de Informações'), ('INFO_COMPLEMENTAR', 'Informações Complementares'), ('PARECER', 'Parecer Técnico'), ('RESPOSTA', 'Resposta'), ('FINALIZACAO', 'Finalização'), ('CANCELAMENTO', 'Cancelamento'), ('REJEICAO', 'Rejeição'), ('ALTERACAO_STATUS', 'Alteração de Status'), ('ALTERACAO_RESPONSAVEL', 'Alteração de Responsável'), ('COMENTARIO', 'Comentário')], max_length=25, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('status_anterior', models.CharField(blank=True, max_length=20, verbose_name='Status Anterior')),
                ('status_novo', models.CharField(blank=True, max_length=20, verbose_name='Status Novo')),
                ('nome_usuario', models.CharField(blank=True, max_length=200, verbose_name='Nome do Usuário')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('arquivo_anexo', models.FileField(blank=True, upload_to='peticionamento/interacoes/%Y/%m/%d/', verbose_name='Arquivo Anexo')),
                ('data_interacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Interação')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('peticao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interacoes', to='peticionamento.peticaoeletronica', verbose_name='Petição')),
            ],
            options={
                'verbose_name': 'Interação da Petição',
                'verbose_name_plural': 'Interações da Petição',
                'ordering': ['-data_interacao'],
            },
        ),
        migrations.CreateModel(
            name='AnexoPeticao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('DOCUMENTO', 'Documento'), ('COMPROVANTE', 'Comprovante'), ('FOTO', 'Foto'), ('VIDEO', 'Vídeo'), ('AUDIO', 'Áudio'), ('OUTROS', 'Outros')], default='DOCUMENTO', max_length=20, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('arquivo', models.FileField(upload_to=peticionamento.models.anexo_upload_path, verbose_name='Arquivo')),
                ('nome_original', models.CharField(max_length=255, verbose_name='Nome Original')),
                ('tamanho_bytes', models.BigIntegerField(verbose_name='Tamanho (bytes)')),
                ('extensao', models.CharField(max_length=10, verbose_name='Extensão')),
                ('validado', models.BooleanField(default=False, verbose_name='Validado')),
                ('data_validacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Validação')),
                ('observacoes_validacao', models.TextField(blank=True, verbose_name='Observações da Validação')),
                ('texto_extraido', models.TextField(blank=True, verbose_name='Texto Extraído (OCR)')),
                ('processado', models.BooleanField(default=False, verbose_name='Processado')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('enviado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='anexos_enviados', to=settings.AUTH_USER_MODEL, verbose_name='Enviado por')),
                ('validado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anexos_validados', to=settings.AUTH_USER_MODEL, verbose_name='Validado por')),
                ('peticao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='peticionamento.peticaoeletronica', verbose_name='Petição')),
            ],
            options={
                'verbose_name': 'Anexo da Petição',
                'verbose_name_plural': 'Anexos da Petição',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='RespostaPeticao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_resposta', models.CharField(choices=[('PROCEDENTE', 'Procedente'), ('IMPROCEDENTE', 'Improcedente'), ('PARCIALMENTE_PROCEDENTE', 'Parcialmente Procedente'), ('ORIENTACAO', 'Orientação'), ('ENCAMINHAMENTO', 'Encaminhamento'), ('ARQUIVAMENTO', 'Arquivamento'), ('OUTROS', 'Outros')], max_length=30, verbose_name='Tipo de Resposta')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('conteudo', models.TextField(verbose_name='Conteúdo da Resposta')),
                ('fundamentacao', models.TextField(blank=True, verbose_name='Fundamentação Legal')),
                ('orientacoes', models.TextField(blank=True, verbose_name='Orientações')),
                ('cargo_responsavel', models.CharField(blank=True, max_length=100, verbose_name='Cargo')),
                ('numero_documento', models.CharField(blank=True, max_length=50, verbose_name='Número do Documento')),
                ('arquivo_resposta', models.FileField(blank=True, upload_to='peticionamento/respostas/%Y/%m/%d/', verbose_name='Arquivo da Resposta')),
                ('data_elaboracao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Elaboração')),
                ('data_envio', models.DateTimeField(blank=True, null=True, verbose_name='Data de Envio')),
                ('enviado_email', models.BooleanField(default=False, verbose_name='Enviado por E-mail')),
                ('enviado_sms', models.BooleanField(default=False, verbose_name='Enviado por SMS')),
                ('enviado_portal', models.BooleanField(default=True, verbose_name='Disponível no Portal')),
                ('peticao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resposta', to='peticionamento.peticaoeletronica', verbose_name='Petição')),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Resposta da Petição',
                'verbose_name_plural': 'Respostas da Petição',
            },
        ),
        migrations.CreateModel(
            name='TipoPeticao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('categoria', models.CharField(choices=[('DEFESA', 'Defesa'), ('SOLICITACAO', 'Solicitação'), ('RECURSO', 'Recurso'), ('OUTROS', 'Outros')], max_length=50, verbose_name='Categoria')),
                ('prazo_resposta_dias', models.IntegerField(default=30, verbose_name='Prazo de Resposta (dias)')),
                ('requer_documentos', models.BooleanField(default=True, verbose_name='Requer Documentos')),
                ('permite_anonimo', models.BooleanField(default=False, verbose_name='Permite Anônimo')),
                ('notificar_email', models.BooleanField(default=True, verbose_name='Notificar por Email')),
                ('notificar_sms', models.BooleanField(default=False, verbose_name='Notificar por SMS')),
                ('campos_obrigatorios', models.JSONField(blank=True, default=list, verbose_name='Campos Obrigatórios')),
                ('campos_opcionais', models.JSONField(blank=True, default=list, verbose_name='Campos Opcionais')),
                ('documentos_obrigatorios', models.JSONField(blank=True, default=list, verbose_name='Documentos Obrigatórios')),
                ('documentos_opcionais', models.JSONField(blank=True, default=list, verbose_name='Documentos Opcionais')),
                ('tamanho_maximo_mb', models.IntegerField(default=10, verbose_name='Tamanho Máximo por Arquivo (MB)')),
                ('tipos_arquivo_permitidos', models.TextField(default='pdf,doc,docx,jpg,jpeg,png,txt', verbose_name='Tipos Permitidos')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('ordem_exibicao', models.IntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Tipo de Petição',
                'verbose_name_plural': 'Tipos de Petições',
                'ordering': ['ordem_exibicao', 'nome'],
                'indexes': [models.Index(fields=['categoria'], name='peticioname_categor_e9c21b_idx'), models.Index(fields=['ativo'], name='peticioname_ativo_d2aead_idx'), models.Index(fields=['ordem_exibicao'], name='peticioname_ordem_e_296cea_idx')],
            },
        ),
        migrations.AddField(
            model_name='peticaoeletronica',
            name='tipo_peticao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='peticionamento.tipopeticao', verbose_name='Tipo de Petição'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['numero_peticao'], name='peticioname_numero__bcb07b_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['protocolo_numero'], name='peticioname_protoco_df76e6_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['status'], name='peticioname_status_8d9d09_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['tipo_peticao'], name='peticioname_tipo_pe_391a4a_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['peticionario_documento'], name='peticioname_peticio_572c53_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['empresa_cnpj'], name='peticioname_empresa_cace16_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['data_envio'], name='peticioname_data_en_0d6bfc_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['prazo_resposta'], name='peticioname_prazo_r_74a0b1_idx'),
        ),
        migrations.AddIndex(
            model_name='peticaoeletronica',
            index=models.Index(fields=['prioridade'], name='peticioname_priorid_4fd9fe_idx'),
        ),
    ]
