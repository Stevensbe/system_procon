# Generated by Django 4.2.11 on 2025-10-01 22:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('portal_cidadao', '0002_perfil_cidadao'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReclamacaoDenuncia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_protocolo', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Número do Protocolo')),
                ('tipo_demanda', models.CharField(choices=[('RECLAMACAO', 'Reclamação'), ('DENUNCIA', 'Denúncia')], default='RECLAMACAO', max_length=20, verbose_name='Tipo de Demanda')),
                ('consumidor_nome', models.CharField(max_length=255, verbose_name='Nome do Consumidor')),
                ('consumidor_cpf', models.CharField(max_length=14, verbose_name='CPF do Consumidor')),
                ('consumidor_email', models.EmailField(max_length=254, verbose_name='E-mail do Consumidor')),
                ('consumidor_telefone', models.CharField(max_length=20, verbose_name='Telefone do Consumidor')),
                ('consumidor_endereco', models.TextField(verbose_name='Endereço do Consumidor')),
                ('consumidor_cep', models.CharField(max_length=10, verbose_name='CEP do Consumidor')),
                ('consumidor_cidade', models.CharField(max_length=100, verbose_name='Cidade do Consumidor')),
                ('consumidor_uf', models.CharField(max_length=2, verbose_name='UF do Consumidor')),
                ('empresa_razao_social', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('empresa_cnpj', models.CharField(max_length=18, verbose_name='CNPJ da Empresa')),
                ('empresa_endereco', models.TextField(verbose_name='Endereço da Empresa')),
                ('empresa_telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone da Empresa')),
                ('empresa_email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail da Empresa')),
                ('descricao_fatos', models.TextField(verbose_name='Descrição dos Fatos')),
                ('data_ocorrencia', models.DateField(verbose_name='Data da Ocorrência')),
                ('valor_envolvido', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Envolvido')),
                ('status', models.CharField(choices=[('REGISTRADA', 'Registrada'), ('EM_ANALISE', 'Em Análise'), ('CLASSIFICADA', 'Classificada'), ('NOTIFICADA', 'Notificada'), ('AGUARDANDO_RESPOSTA', 'Aguardando Resposta'), ('EM_CONCILIACAO', 'Em Conciliação'), ('CONCILIADA', 'Conciliada'), ('EM_INSTRUCAO', 'Em Instrução'), ('DECIDIDA', 'Decidida'), ('APLICADA_PENALIDADE', 'Aplicada Penalidade'), ('RECURSO_APRESENTADO', 'Recurso Apresentado'), ('FINALIZADA', 'Finalizada'), ('ARQUIVADA', 'Arquivada')], default='REGISTRADA', max_length=25, verbose_name='Status')),
                ('tipo_classificacao', models.CharField(blank=True, choices=[('ATENDIMENTO_SIMPLES', 'Atendimento Simples'), ('CIP', 'Carta de Informação Preliminar'), ('PROCESSO_ADMINISTRATIVO', 'Processo Administrativo')], max_length=25, null=True, verbose_name='Tipo de Classificação')),
                ('assunto_classificado', models.CharField(blank=True, max_length=200, verbose_name='Assunto Classificado')),
                ('competencia_procon', models.BooleanField(default=True, verbose_name='É Competência do PROCON')),
                ('observacoes_analise', models.TextField(blank=True, verbose_name='Observações da Análise')),
                ('notificacao_enviada', models.BooleanField(default=False, verbose_name='Notificação Enviada')),
                ('data_notificacao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Notificação')),
                ('prazo_resposta', models.DateTimeField(blank=True, null=True, verbose_name='Prazo para Resposta')),
                ('resposta_recebida', models.BooleanField(default=False, verbose_name='Resposta Recebida')),
                ('data_resposta', models.DateTimeField(blank=True, null=True, verbose_name='Data da Resposta')),
                ('conteudo_resposta', models.TextField(blank=True, verbose_name='Conteúdo da Resposta')),
                ('conciliacao_marcada', models.BooleanField(default=False, verbose_name='Conciliação Marcada')),
                ('data_conciliacao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Conciliação')),
                ('conciliacao_realizada', models.BooleanField(default=False, verbose_name='Conciliação Realizada')),
                ('resultado_conciliacao', models.CharField(blank=True, choices=[('ACORDO', 'Acordo'), ('NAO_ACORDO', 'Não Houve Acordo'), ('NAO_COMPARECEU', 'Não Compareceu')], max_length=50, verbose_name='Resultado da Conciliação')),
                ('valor_acordo', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor do Acordo')),
                ('instrucao_iniciada', models.BooleanField(default=False, verbose_name='Instrução Iniciada')),
                ('data_inicio_instrucao', models.DateTimeField(blank=True, null=True, verbose_name='Data Início Instrução')),
                ('provas_coletadas', models.TextField(blank=True, verbose_name='Provas Coletadas')),
                ('impugnacao_consumidor', models.TextField(blank=True, verbose_name='Impugnação do Consumidor')),
                ('encaminhado_juridico_1', models.BooleanField(default=False, verbose_name='Encaminhado Jurídico 1')),
                ('encaminhado_juridico_2', models.BooleanField(default=False, verbose_name='Encaminhado Jurídico 2')),
                ('decisao_elaborada', models.BooleanField(default=False, verbose_name='Decisão Elaborada')),
                ('data_decisao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Decisão')),
                ('tipo_decisao', models.CharField(blank=True, choices=[('PROCEDENTE', 'Procedente'), ('IMPROCEDENTE', 'Improcedente'), ('PARCIALMENTE_PROCEDENTE', 'Parcialmente Procedente')], max_length=25, verbose_name='Tipo da Decisão')),
                ('fundamentacao_decisao', models.TextField(blank=True, verbose_name='Fundamentação da Decisão')),
                ('penalidade_aplicada', models.BooleanField(default=False, verbose_name='Penalidade Aplicada')),
                ('tipo_penalidade', models.CharField(blank=True, choices=[('MULTA', 'Multa'), ('OBRIGACAO_FAZER', 'Obrigação de Fazer'), ('SUSPENSAO_ATIVIDADE', 'Suspensão de Atividade')], max_length=50, verbose_name='Tipo de Penalidade')),
                ('valor_multa', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor da Multa')),
                ('boleto_emitido', models.BooleanField(default=False, verbose_name='Boleto Emitido')),
                ('recurso_apresentado', models.BooleanField(default=False, verbose_name='Recurso Apresentado')),
                ('data_recurso', models.DateTimeField(blank=True, null=True, verbose_name='Data do Recurso')),
                ('tipo_recurso', models.CharField(blank=True, max_length=50, verbose_name='Tipo de Recurso')),
                ('decisao_recurso', models.CharField(blank=True, choices=[('MANTIDA', 'Mantida'), ('MODIFICADA', 'Modificada'), ('ANULADA', 'Anulada')], max_length=50, verbose_name='Decisão do Recurso')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('analista_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reclamacoes_analisadas', to=settings.AUTH_USER_MODEL, verbose_name='Analista Responsável')),
                ('atendente_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reclamacoes_atendidas', to=settings.AUTH_USER_MODEL, verbose_name='Atendente Responsável')),
            ],
            options={
                'verbose_name': 'Reclamação/Denúncia',
                'verbose_name_plural': 'Reclamações/Denúncias',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoReclamacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=100, verbose_name='Ação')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_acao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Ação')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('reclamacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='portal_cidadao.reclamacaodenuncia')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico da Reclamação',
                'verbose_name_plural': 'Histórico das Reclamações',
                'ordering': ['-data_acao'],
            },
        ),
        migrations.CreateModel(
            name='AnexoReclamacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='reclamacoes/anexos/', verbose_name='Arquivo')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('tipo_documento', models.CharField(choices=[('NOTA_FISCAL', 'Nota Fiscal'), ('CONTRATO', 'Contrato'), ('COMPROVANTE', 'Comprovante'), ('PRINT_TELA', 'Print de Tela'), ('OUTROS', 'Outros')], max_length=50, verbose_name='Tipo de Documento')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data do Upload')),
                ('reclamacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='portal_cidadao.reclamacaodenuncia')),
            ],
            options={
                'verbose_name': 'Anexo da Reclamação',
                'verbose_name_plural': 'Anexos da Reclamação',
            },
        ),
        migrations.AddIndex(
            model_name='reclamacaodenuncia',
            index=models.Index(fields=['numero_protocolo'], name='portal_cida_numero__f89619_idx'),
        ),
        migrations.AddIndex(
            model_name='reclamacaodenuncia',
            index=models.Index(fields=['status'], name='portal_cida_status_5fd72d_idx'),
        ),
        migrations.AddIndex(
            model_name='reclamacaodenuncia',
            index=models.Index(fields=['tipo_classificacao'], name='portal_cida_tipo_cl_ab7c9b_idx'),
        ),
        migrations.AddIndex(
            model_name='reclamacaodenuncia',
            index=models.Index(fields=['empresa_cnpj'], name='portal_cida_empresa_91b218_idx'),
        ),
        migrations.AddIndex(
            model_name='reclamacaodenuncia',
            index=models.Index(fields=['consumidor_cpf'], name='portal_cida_consumi_082e85_idx'),
        ),
        migrations.AddIndex(
            model_name='reclamacaodenuncia',
            index=models.Index(fields=['criado_em'], name='portal_cida_criado__65f780_idx'),
        ),
    ]
